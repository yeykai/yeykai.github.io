<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>【学习日记】第一个爬虫---Scrapy框架入门(一)</title>
    <link href="undefined2019/08/28/newcoderScrapy/"/>
    <url>2019/08/28/newcoderScrapy/</url>
    
    <content type="html"><![CDATA[<h4 id="爬虫是一个非常好用的数据采集工具，数据的来源就是庞大的互联网资源，它的存在让你节省很多手动的繁琐的数据搜集的时间，而且它的实现也并不复杂，几十行代码就能轻松地在数秒内采集大量数据。"><a href="#爬虫是一个非常好用的数据采集工具，数据的来源就是庞大的互联网资源，它的存在让你节省很多手动的繁琐的数据搜集的时间，而且它的实现也并不复杂，几十行代码就能轻松地在数秒内采集大量数据。" class="headerlink" title="爬虫是一个非常好用的数据采集工具，数据的来源就是庞大的互联网资源，它的存在让你节省很多手动的繁琐的数据搜集的时间，而且它的实现也并不复杂，几十行代码就能轻松地在数秒内采集大量数据。"></a>爬虫是一个非常好用的数据采集工具，数据的来源就是庞大的互联网资源，它的存在让你节省很多手动的繁琐的数据搜集的时间，而且它的实现也并不复杂，几十行代码就能轻松地在数秒内采集大量数据。</h4><a id="more"></a><h4 id="关于爬虫的实现，我选择python语言来操作，虽然java也是可以做到类似的功能，但是我也想体验一下python的开发过程。简单的一个python爬虫，可以使用request库来完成，它可以帮助你完成一系列网络请求，并返回一个response对象，包含网页的内容，就可以开始对网页内容使用xpath等工具得到你想要的信息。"><a href="#关于爬虫的实现，我选择python语言来操作，虽然java也是可以做到类似的功能，但是我也想体验一下python的开发过程。简单的一个python爬虫，可以使用request库来完成，它可以帮助你完成一系列网络请求，并返回一个response对象，包含网页的内容，就可以开始对网页内容使用xpath等工具得到你想要的信息。" class="headerlink" title="关于爬虫的实现，我选择python语言来操作，虽然java也是可以做到类似的功能，但是我也想体验一下python的开发过程。简单的一个python爬虫，可以使用request库来完成，它可以帮助你完成一系列网络请求，并返回一个response对象，包含网页的内容，就可以开始对网页内容使用xpath等工具得到你想要的信息。"></a>关于爬虫的实现，我选择python语言来操作，虽然java也是可以做到类似的功能，但是我也想体验一下python的开发过程。简单的一个python爬虫，可以使用request库来完成，它可以帮助你完成一系列网络请求，并返回一个response对象，包含网页的内容，就可以开始对网页内容使用xpath等工具得到你想要的信息。</h4><h4 id="不过今天的主角是一个爬虫框架—Scrapy，是基于twisted框架（一个流行的事件驱动的python网络框架）开发而来，它内部提供的各个组件相互协作，完成页面请求下载，数据清洗存档等一些列操作。下图是他的运作模型图："><a href="#不过今天的主角是一个爬虫框架—Scrapy，是基于twisted框架（一个流行的事件驱动的python网络框架）开发而来，它内部提供的各个组件相互协作，完成页面请求下载，数据清洗存档等一些列操作。下图是他的运作模型图：" class="headerlink" title="不过今天的主角是一个爬虫框架—Scrapy，是基于twisted框架（一个流行的事件驱动的python网络框架）开发而来，它内部提供的各个组件相互协作，完成页面请求下载，数据清洗存档等一些列操作。下图是他的运作模型图："></a>不过今天的主角是一个爬虫框架—Scrapy，是基于twisted框架（一个流行的事件驱动的python网络框架）开发而来，它内部提供的各个组件相互协作，完成页面请求下载，数据清洗存档等一些列操作。下图是他的运作模型图：</h4><p><img src="http://img.yeykai.cn/img/scrapy架构.jpg" alt="scrapy架构图"></p><h4 id="这里简单介绍一下上图的几个重要组件："><a href="#这里简单介绍一下上图的几个重要组件：" class="headerlink" title="这里简单介绍一下上图的几个重要组件："></a>这里简单介绍一下上图的几个重要组件：</h4><ol><li>ScrapyEngine:整个框架的中枢，为各个组件传递请求或响应数据</li><li>Spiders:自定义的页面数据处理逻辑</li><li>Scheduler:url的调度器</li><li>ItemPipeline:对Spiders处理好的数据做进一步处理，如入库或写入文件</li></ol><h4 id="我也是今天刚接触这一框架，有理解不对的地方各位大佬在评论去留个言，这里用一个简单的例子，来应用scrapy框架。我将写一个爬取牛客网的剑指offer题库的题目信息，包括每个题的类型，通过率等信息，最终输出到csv表格中。"><a href="#我也是今天刚接触这一框架，有理解不对的地方各位大佬在评论去留个言，这里用一个简单的例子，来应用scrapy框架。我将写一个爬取牛客网的剑指offer题库的题目信息，包括每个题的类型，通过率等信息，最终输出到csv表格中。" class="headerlink" title="我也是今天刚接触这一框架，有理解不对的地方各位大佬在评论去留个言，这里用一个简单的例子，来应用scrapy框架。我将写一个爬取牛客网的剑指offer题库的题目信息，包括每个题的类型，通过率等信息，最终输出到csv表格中。"></a>我也是今天刚接触这一框架，有理解不对的地方各位大佬在评论去留个言，这里用一个简单的例子，来应用scrapy框架。我将写一个爬取牛客网的剑指offer题库的题目信息，包括每个题的类型，通过率等信息，最终输出到csv表格中。</h4><h4 id="写爬虫的第一步，当然是需要看看要爬取的资源长什么样，才能进行后续的代码编写，我们找到目标地址，打开浏览器的开发者工具，查看我们要的数据在哪个位置，下图便是我要爬取的目标数据的位置："><a href="#写爬虫的第一步，当然是需要看看要爬取的资源长什么样，才能进行后续的代码编写，我们找到目标地址，打开浏览器的开发者工具，查看我们要的数据在哪个位置，下图便是我要爬取的目标数据的位置：" class="headerlink" title="写爬虫的第一步，当然是需要看看要爬取的资源长什么样，才能进行后续的代码编写，我们找到目标地址，打开浏览器的开发者工具，查看我们要的数据在哪个位置，下图便是我要爬取的目标数据的位置："></a>写爬虫的第一步，当然是需要看看要爬取的资源长什么样，才能进行后续的代码编写，我们找到目标地址，打开浏览器的开发者工具，查看我们要的数据在哪个位置，下图便是我要爬取的目标数据的位置：</h4><p><img src="http://img.yeykai.cn/img/pachong.jpg" alt="目标资源定位"></p><h4 id="确认过眼神，是能爬到的数据，开始搭建工程搞起，首先，在本地安装scrapy，只需要用pip-install-scrapy命令下载即可，如果出现下载失败网络超时的现象，可以尝试使用国内镜像下载，当然，如果你使用PyCharm开发，也可以直接修改镜像来源，如下图所示："><a href="#确认过眼神，是能爬到的数据，开始搭建工程搞起，首先，在本地安装scrapy，只需要用pip-install-scrapy命令下载即可，如果出现下载失败网络超时的现象，可以尝试使用国内镜像下载，当然，如果你使用PyCharm开发，也可以直接修改镜像来源，如下图所示：" class="headerlink" title="确认过眼神，是能爬到的数据，开始搭建工程搞起，首先，在本地安装scrapy，只需要用pip install scrapy命令下载即可，如果出现下载失败网络超时的现象，可以尝试使用国内镜像下载，当然，如果你使用PyCharm开发，也可以直接修改镜像来源，如下图所示："></a>确认过眼神，是能爬到的数据，开始搭建工程搞起，首先，在本地安装scrapy，只需要用pip install scrapy命令下载即可，如果出现下载失败网络超时的现象，可以尝试使用国内镜像下载，当然，如果你使用PyCharm开发，也可以直接修改镜像来源，如下图所示：</h4><p><img src="http://img.yeykai.cn/img/mirror.png" alt="PyCharm镜像设置"></p><h4 id="安装完成后，找一个目录，用命令行输入scrapy-startproject-yourprojectname来创建一个scrapy工程，创建后得到这样的目录："><a href="#安装完成后，找一个目录，用命令行输入scrapy-startproject-yourprojectname来创建一个scrapy工程，创建后得到这样的目录：" class="headerlink" title="安装完成后，找一个目录，用命令行输入scrapy startproject yourprojectname来创建一个scrapy工程，创建后得到这样的目录："></a>安装完成后，找一个目录，用命令行输入scrapy startproject yourprojectname来创建一个scrapy工程，创建后得到这样的目录：</h4><p><img src="http://img.yeykai.cn/img/cmdscrapy.jpg" alt="命令行创建scrapy工程"></p><p><img src="http://img.yeykai.cn/img/mulv.jpg" alt="创建后目录"></p><h4 id="使用PyCharm打开这个工程，这里生成的文件，根据文件名结合前面的架构图就能知道它们大概的作用。开发前，我们需要给这个工程加一个启动文件，因为scrapy默认是需要在命令行运行的，所以我们编写一个入口文件在根目录下，模拟命令行操作，并将他设置为启动文件，具体代码如下："><a href="#使用PyCharm打开这个工程，这里生成的文件，根据文件名结合前面的架构图就能知道它们大概的作用。开发前，我们需要给这个工程加一个启动文件，因为scrapy默认是需要在命令行运行的，所以我们编写一个入口文件在根目录下，模拟命令行操作，并将他设置为启动文件，具体代码如下：" class="headerlink" title="使用PyCharm打开这个工程，这里生成的文件，根据文件名结合前面的架构图就能知道它们大概的作用。开发前，我们需要给这个工程加一个启动文件，因为scrapy默认是需要在命令行运行的，所以我们编写一个入口文件在根目录下，模拟命令行操作，并将他设置为启动文件，具体代码如下："></a>使用PyCharm打开这个工程，这里生成的文件，根据文件名结合前面的架构图就能知道它们大概的作用。开发前，我们需要给这个工程加一个启动文件，因为scrapy默认是需要在命令行运行的，所以我们编写一个入口文件在根目录下，模拟命令行操作，并将他设置为启动文件，具体代码如下：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy.cmdline <span class="keyword">import</span> execute</span><br><span class="line">execute([<span class="string">'scrapy'</span>, <span class="string">'crawl'</span>, <span class="string">'spidersTest'</span>])</span><br></pre></td></tr></table></figure><h4 id="其中这里的第三个参数spidersTest是你要启动的爬虫名字，不能弄错，到此开发环境基本搭建完毕，可以开始正式开发了，具体的开发步骤，我根据中文文档来操作。"><a href="#其中这里的第三个参数spidersTest是你要启动的爬虫名字，不能弄错，到此开发环境基本搭建完毕，可以开始正式开发了，具体的开发步骤，我根据中文文档来操作。" class="headerlink" title="其中这里的第三个参数spidersTest是你要启动的爬虫名字，不能弄错，到此开发环境基本搭建完毕，可以开始正式开发了，具体的开发步骤，我根据中文文档来操作。"></a>其中这里的第三个参数spidersTest是你要启动的爬虫名字，不能弄错，到此开发环境基本搭建完毕，可以开始正式开发了，具体的开发步骤，我根据<a href="https://scrapy-chs.readthedocs.io/zh_CN/latest/" target="_blank" rel="noopener">中文文档</a>来操作。</h4><h4 id="第一步，我们写一个简单的item类，定义变量来存放我们采集到的数据，具体代码如下："><a href="#第一步，我们写一个简单的item类，定义变量来存放我们采集到的数据，具体代码如下：" class="headerlink" title="第一步，我们写一个简单的item类，定义变量来存放我们采集到的数据，具体代码如下："></a>第一步，我们写一个简单的item类，定义变量来存放我们采集到的数据，具体代码如下：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyscrapyItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    kaodian = scrapy.Field()</span><br><span class="line">    question = scrapy.Field()</span><br><span class="line">    hot = scrapy.Field()</span><br><span class="line">    passingRate = scrapy.Field()</span><br></pre></td></tr></table></figure><h4 id="第二步，也是非常关键的一步，编写自定义的spider类，来爬取和处理数据，下面是具体的实现代码："><a href="#第二步，也是非常关键的一步，编写自定义的spider类，来爬取和处理数据，下面是具体的实现代码：" class="headerlink" title="第二步，也是非常关键的一步，编写自定义的spider类，来爬取和处理数据，下面是具体的实现代码："></a>第二步，也是非常关键的一步，编写自定义的spider类，来爬取和处理数据，下面是具体的实现代码：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> Selector, Request</span><br><span class="line"><span class="keyword">from</span> myscrapy.items <span class="keyword">import</span> MyscrapyItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">spidersTest</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'spidersTest'</span></span><br><span class="line">    allowed_domains = [<span class="string">'www.nowcoder.com'</span>]</span><br><span class="line">    baseUrls = <span class="string">'https://www.nowcoder.com/ta/coding-interviews?query=&amp;asc=true&amp;order=&amp;page='</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_requests</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">            url = self.baseUrls + str(i)</span><br><span class="line">            <span class="keyword">yield</span> Request(url,self.parse)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line"></span><br><span class="line">        item = MyscrapyItem()</span><br><span class="line"></span><br><span class="line">        sel = Selector(response)  <span class="comment"># Xpath选择器</span></span><br><span class="line">        kaodians = sel.xpath(<span class="string">'//td[@class="offer-pot txt-left"]/text()'</span>).re(<span class="string">'\S+'</span>)</span><br><span class="line">        questions = sel.xpath(<span class="string">'//td[@class="txt-left"]/a/text()'</span>).re(<span class="string">'\S+'</span>)</span><br><span class="line">        hots = sel.xpath(<span class="string">'//tr/td[3]/text()'</span>).extract()</span><br><span class="line">        passingRates = sel.xpath(<span class="string">'//tr/td[4]/text()'</span>).extract()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span>  range(<span class="number">0</span>, len(kaodians)):</span><br><span class="line">            item[<span class="string">'kaodian'</span>] = kaodians[i]</span><br><span class="line">            item[<span class="string">'question'</span>] = questions[i]</span><br><span class="line">            item[<span class="string">'hot'</span>] = hots[i]</span><br><span class="line">            item[<span class="string">'passingRate'</span>] = passingRates[i]</span><br><span class="line">            <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure><h4 id="下面是这个类的实现细节："><a href="#下面是这个类的实现细节：" class="headerlink" title="下面是这个类的实现细节："></a>下面是这个类的实现细节：</h4><ol><li>首先它需要继承Spider，这样它才是一个spider。</li><li>name变量代表这个爬虫的名字，也是用命令行执行的名字</li><li>allowed_domains表示要爬取的网页需要在这个域名下</li><li>start_requests(self)定义我们要爬取的页面url，并以 parse 为回调函数生成 Request，这里我们要爬取的题目有4页，所以需要生成4个url</li><li>parse(self, response)负责处理response并返回处理的数据以及(/或)跟进的URL。</li><li>在parse方法中，我们需要开始处理response，在整个页面数据中取到我们想要的数据，所以需要用到一个选择器。筛选的方式有很多，理论上xpath和正则表达式都是能实现的，但是对于这种返回的html页面，现在xpath来解析会更加方便，正则表达式可以作为辅助，对xpath解析的数据做进一步清洗。</li><li>常用的选择器还有BeautifulSoup和lxml，具体用法这里就不说了，自行百度哈哈</li><li>从前面的浏览器控制台，我们知道考点和题目字段可以直接从td的类名获取到，xpath表达式也只需要用//绝对路径去找就好了，而对于热度和通过率字段，这两个td是没类名的，因此可以用索引来寻找，也很简单，最后获取到之后需要加上extract()方法转换成字符串，而对于考点和题目字段，提取后还会有换行符和空格的情况，这是可以用re()方法，利用正则表达式’\S+’获取非空的信息。</li><li>最后，把获取的数据放在前面定义的item中，等待itempipeline进一步处理</li></ol><h4 id="最后一步，编写itempipeline，将数据写入到表格中，这里需要先用-init-self-方法初始化表格文件，真正处理的方法在process-item-self-item-spider-中，具体代码如下："><a href="#最后一步，编写itempipeline，将数据写入到表格中，这里需要先用-init-self-方法初始化表格文件，真正处理的方法在process-item-self-item-spider-中，具体代码如下：" class="headerlink" title="最后一步，编写itempipeline，将数据写入到表格中，这里需要先用 init(self)方法初始化表格文件，真正处理的方法在process_item(self, item, spider)中，具体代码如下："></a>最后一步，编写itempipeline，将数据写入到表格中，这里需要先用 <strong>init</strong>(self)方法初始化表格文件，真正处理的方法在process_item(self, item, spider)中，具体代码如下：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyscrapyPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># csv文件的位置,无需事先创建</span></span><br><span class="line">        store_file = <span class="string">'D:/spiders/newcoder.csv'</span></span><br><span class="line">        <span class="comment"># 打开(创建)文件</span></span><br><span class="line">        self.file = open(store_file, <span class="string">'w'</span>,newline=<span class="string">''</span>)</span><br><span class="line">        <span class="comment"># csv写法</span></span><br><span class="line">        self.writer = csv.writer(self.file)</span><br><span class="line">        <span class="comment"># 写入表头</span></span><br><span class="line">        self.writer.writerow((<span class="string">'考点'</span>.encode(<span class="string">'utf-8'</span>).decode(<span class="string">'utf-8'</span>),</span><br><span class="line">                              <span class="string">'题目'</span>.encode(<span class="string">'utf-8'</span>).decode(<span class="string">'utf-8'</span>),</span><br><span class="line">                              <span class="string">'热度'</span>.encode(<span class="string">'utf-8'</span>).decode(<span class="string">'utf-8'</span>),</span><br><span class="line">                              <span class="string">'通过率'</span>.encode(<span class="string">'utf-8'</span>).decode(<span class="string">'utf-8'</span>)))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        <span class="comment"># 数据写入csv</span></span><br><span class="line">        self.writer.writerow((item[<span class="string">'kaodian'</span>].encode(<span class="string">'utf-8'</span>).decode(<span class="string">'utf-8'</span>),</span><br><span class="line">                              item[<span class="string">'question'</span>].encode(<span class="string">'utf-8'</span>).decode(<span class="string">'utf-8'</span>),</span><br><span class="line">                              item[<span class="string">'hot'</span>].encode(<span class="string">'utf-8'</span>).decode(<span class="string">'utf-8'</span>),</span><br><span class="line">                              item[<span class="string">'passingRate'</span>].encode(<span class="string">'utf-8'</span>).decode(<span class="string">'utf-8'</span>)))</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close_spider</span><span class="params">(self, spider)</span>:</span></span><br><span class="line">        <span class="comment"># 关闭爬虫时顺便将文件保存退出</span></span><br><span class="line">        self.file.close()</span><br></pre></td></tr></table></figure><h4 id="运行前，需要把配置文件setting-py的下面这段代码取消注释"><a href="#运行前，需要把配置文件setting-py的下面这段代码取消注释" class="headerlink" title="运行前，需要把配置文件setting.py的下面这段代码取消注释"></a>运行前，需要把配置文件setting.py的下面这段代码取消注释</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">'myscrapy.pipelines.MyscrapyPipeline'</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="到此，整个开发过程完成，可以测试一下成果了，下图是测试结果："><a href="#到此，整个开发过程完成，可以测试一下成果了，下图是测试结果：" class="headerlink" title="到此，整个开发过程完成，可以测试一下成果了，下图是测试结果："></a>到此，整个开发过程完成，可以测试一下成果了，下图是测试结果：</h4><p><img src="http://img.yeykai.cn/img/ceshijieguo.png" alt="运行日志"></p><p><img src="http://img.yeykai.cn/img/csvjieguo.jpg" alt="输出表格内容"></p><h4 id="可以看到，短短一秒就将大量数据从网上成功地爬出来，效果很好，达到预期目标。今天很开心，第一次使用scrapy写爬虫，虽然案例很简单，但是整个过程下来，还是觉得很好玩，很有意思，因此写下本文记录一下，总结经验。如果有哪里不对，请大佬们指点一下。"><a href="#可以看到，短短一秒就将大量数据从网上成功地爬出来，效果很好，达到预期目标。今天很开心，第一次使用scrapy写爬虫，虽然案例很简单，但是整个过程下来，还是觉得很好玩，很有意思，因此写下本文记录一下，总结经验。如果有哪里不对，请大佬们指点一下。" class="headerlink" title="可以看到，短短一秒就将大量数据从网上成功地爬出来，效果很好，达到预期目标。今天很开心，第一次使用scrapy写爬虫，虽然案例很简单，但是整个过程下来，还是觉得很好玩，很有意思，因此写下本文记录一下，总结经验。如果有哪里不对，请大佬们指点一下。"></a>可以看到，短短一秒就将大量数据从网上成功地爬出来，效果很好，达到预期目标。今天很开心，第一次使用scrapy写爬虫，虽然案例很简单，但是整个过程下来，还是觉得很好玩，很有意思，因此写下本文记录一下，总结经验。如果有哪里不对，请大佬们指点一下。</h4>]]></content>
    
    
    <categories>
      
      <category>学习日记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>爬虫</tag>
      
      <tag>Scrapy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown图片的解决方案---PicGo+腾讯云COS</title>
    <link href="undefined2019/08/26/MarkdownPicGo/"/>
    <url>2019/08/26/MarkdownPicGo/</url>
    
    <content type="html"><![CDATA[<h4 id="前言：我现在已经习惯使用Markdown格式来写博客，但是，每次给文章添加图片的过程，都让我感到很烦躁，之前使用过的方式是把图片上传到一些第三方平台（例如简书），在将外链放在markdown中，完成插入图片操作。"><a href="#前言：我现在已经习惯使用Markdown格式来写博客，但是，每次给文章添加图片的过程，都让我感到很烦躁，之前使用过的方式是把图片上传到一些第三方平台（例如简书），在将外链放在markdown中，完成插入图片操作。" class="headerlink" title="前言：我现在已经习惯使用Markdown格式来写博客，但是，每次给文章添加图片的过程，都让我感到很烦躁，之前使用过的方式是把图片上传到一些第三方平台（例如简书），在将外链放在markdown中，完成插入图片操作。"></a>前言：我现在已经习惯使用Markdown格式来写博客，但是，每次给文章添加图片的过程，都让我感到很烦躁，之前使用过的方式是把图片上传到一些第三方平台（例如简书），在将外链放在markdown中，完成插入图片操作。</h4><h4 id="其实上面的方法也不算太麻烦，但是，好景不长，突然有一天你就发现自己的博客图片加载不出来了，然后我又把插入图片的方式改成本地路径，这样虽然能解决问题，但是过程实在太麻烦了，而且我也没法在编辑过程中预览图片的效果。"><a href="#其实上面的方法也不算太麻烦，但是，好景不长，突然有一天你就发现自己的博客图片加载不出来了，然后我又把插入图片的方式改成本地路径，这样虽然能解决问题，但是过程实在太麻烦了，而且我也没法在编辑过程中预览图片的效果。" class="headerlink" title="其实上面的方法也不算太麻烦，但是，好景不长，突然有一天你就发现自己的博客图片加载不出来了，然后我又把插入图片的方式改成本地路径，这样虽然能解决问题，但是过程实在太麻烦了，而且我也没法在编辑过程中预览图片的效果。"></a>其实上面的方法也不算太麻烦，但是，好景不长，突然有一天你就发现自己的博客图片加载不出来了，然后我又把插入图片的方式改成本地路径，这样虽然能解决问题，但是过程实在太麻烦了，而且我也没法在编辑过程中预览图片的效果。</h4><a id="more"></a><hr><h4 id="直到今天，朋友分享的一个工具—PicGo，解决了这种尴尬的局面。PicGo是一个操作简单效率高的图片上传工具，只需要简单的设置，再把图片拖拽上传，你就可以得到一个可以直接粘贴到markdown的图片链接，整个过程体验非常好。"><a href="#直到今天，朋友分享的一个工具—PicGo，解决了这种尴尬的局面。PicGo是一个操作简单效率高的图片上传工具，只需要简单的设置，再把图片拖拽上传，你就可以得到一个可以直接粘贴到markdown的图片链接，整个过程体验非常好。" class="headerlink" title="直到今天，朋友分享的一个工具—PicGo，解决了这种尴尬的局面。PicGo是一个操作简单效率高的图片上传工具，只需要简单的设置，再把图片拖拽上传，你就可以得到一个可以直接粘贴到markdown的图片链接，整个过程体验非常好。"></a>直到今天，朋友分享的一个工具—PicGo，解决了这种尴尬的局面。PicGo是一个操作简单效率高的图片上传工具，只需要简单的设置，再把图片拖拽上传，你就可以得到一个可以直接粘贴到markdown的图片链接，整个过程体验非常好。</h4><h4 id="PicGo支持的图床种类丰富，我选择了腾讯云的COS来配合使用，现在新用户用50G半年的免费使用资格，对于存放博客图片绰绰有余。"><a href="#PicGo支持的图床种类丰富，我选择了腾讯云的COS来配合使用，现在新用户用50G半年的免费使用资格，对于存放博客图片绰绰有余。" class="headerlink" title="PicGo支持的图床种类丰富，我选择了腾讯云的COS来配合使用，现在新用户用50G半年的免费使用资格，对于存放博客图片绰绰有余。"></a>PicGo支持的图床种类丰富，我选择了腾讯云的COS来配合使用，现在新用户用50G半年的免费使用资格，对于存放博客图片绰绰有余。</h4><p><img src="http://img.yeykai.cn/img/1566807207.jpg" alt="赠送的50G"></p><h4 id="首先，需要把PicGo下载下来并安装，工具已经开源，在github上就能下载，而且还跨平台，好评！"><a href="#首先，需要把PicGo下载下来并安装，工具已经开源，在github上就能下载，而且还跨平台，好评！" class="headerlink" title="首先，需要把PicGo下载下来并安装，工具已经开源，在github上就能下载，而且还跨平台，好评！"></a>首先，需要把PicGo下载下来并安装，工具已经开源，在github上就能下载，而且还跨平台，好评！</h4><h4 id="安装完成后，开始配置腾讯云COS，配置前，需要去这里配置访问密钥，这样PicGo才可以正常使用"><a href="#安装完成后，开始配置腾讯云COS，配置前，需要去这里配置访问密钥，这样PicGo才可以正常使用" class="headerlink" title="安装完成后，开始配置腾讯云COS，配置前，需要去这里配置访问密钥，这样PicGo才可以正常使用"></a>安装完成后，开始配置腾讯云COS，配置前，需要去<a href="https://console.cloud.tencent.com/cam/capi" target="_blank" rel="noopener">这里</a>配置访问密钥，这样PicGo才可以正常使用</h4><p><img src="http://img.yeykai.cn/img/apimiyao.png" alt="创建访问密钥"></p><h4 id="创建一个存储桶，这里的配置可以根据自己的情况来填，不过这里的访问权限需要改为公有读私有写，如果使用私有读写，上传后的外链就没法直接访问图片了。"><a href="#创建一个存储桶，这里的配置可以根据自己的情况来填，不过这里的访问权限需要改为公有读私有写，如果使用私有读写，上传后的外链就没法直接访问图片了。" class="headerlink" title="创建一个存储桶，这里的配置可以根据自己的情况来填，不过这里的访问权限需要改为公有读私有写，如果使用私有读写，上传后的外链就没法直接访问图片了。"></a>创建一个存储桶，这里的配置可以根据自己的情况来填，不过这里的访问权限需要改为公有读私有写，如果使用私有读写，上传后的外链就没法直接访问图片了。</h4><p><img src="http://img.yeykai.cn/img/1566807699.jpg" alt="创建存储桶"></p><h4 id="查看刚创建的存储桶配置，结合访问密钥，现在可以开始配置PicGo了，将必填的项目按照腾讯云上的数据依次填入，并设为默认图床。"><a href="#查看刚创建的存储桶配置，结合访问密钥，现在可以开始配置PicGo了，将必填的项目按照腾讯云上的数据依次填入，并设为默认图床。" class="headerlink" title="查看刚创建的存储桶配置，结合访问密钥，现在可以开始配置PicGo了，将必填的项目按照腾讯云上的数据依次填入，并设为默认图床。"></a>查看刚创建的存储桶配置，结合访问密钥，现在可以开始配置PicGo了，将必填的项目按照腾讯云上的数据依次填入，并设为默认图床。</h4><p><img src="http://img.yeykai.cn/img/60c9b4e43dce609613e730c7f2ec5e3.png" alt="PicGo配置"></p><h4 id="到此，所有配置均已完成，可以尝试上传图片了，选择一张图片拖拽到上传区，就可以看到上传成功的通知了，并且这条链接已经在剪贴板中了。"><a href="#到此，所有配置均已完成，可以尝试上传图片了，选择一张图片拖拽到上传区，就可以看到上传成功的通知了，并且这条链接已经在剪贴板中了。" class="headerlink" title="到此，所有配置均已完成，可以尝试上传图片了，选择一张图片拖拽到上传区，就可以看到上传成功的通知了，并且这条链接已经在剪贴板中了。"></a>到此，所有配置均已完成，可以尝试上传图片了，选择一张图片拖拽到上传区，就可以看到上传成功的通知了，并且这条链接已经在剪贴板中了。</h4><p><img src="http://img.yeykai.cn/img/1566808730.png" alt=""></p><h4 id="当然，如果你有已经备案好的域名，也可以更改默认域名，只需要在存储桶配置中更改自定义域名，然后在域名解析设置中，加上映射到这个桶的配置，最后，在PicGo中更改自定义域名，就可以用自己的域名来访问图片了。"><a href="#当然，如果你有已经备案好的域名，也可以更改默认域名，只需要在存储桶配置中更改自定义域名，然后在域名解析设置中，加上映射到这个桶的配置，最后，在PicGo中更改自定义域名，就可以用自己的域名来访问图片了。" class="headerlink" title="当然，如果你有已经备案好的域名，也可以更改默认域名，只需要在存储桶配置中更改自定义域名，然后在域名解析设置中，加上映射到这个桶的配置，最后，在PicGo中更改自定义域名，就可以用自己的域名来访问图片了。"></a>当然，如果你有已经备案好的域名，也可以更改默认域名，只需要在存储桶配置中更改自定义域名，然后在域名解析设置中，加上映射到这个桶的配置，最后，在PicGo中更改自定义域名，就可以用自己的域名来访问图片了。</h4><p><img src="http://img.yeykai.cn/img/1566809101.jpg" alt="域名解析"></p><p><img src="http://img.yeykai.cn/img/1566809183.jpg" alt="桶的域名配置"></p><h4 id="最后分享一个刚踩的坑，上传的图片名称最好就不要带括号了，不然复制到markdown，就识别不到了。"><a href="#最后分享一个刚踩的坑，上传的图片名称最好就不要带括号了，不然复制到markdown，就识别不到了。" class="headerlink" title="最后分享一个刚踩的坑，上传的图片名称最好就不要带括号了，不然复制到markdown，就识别不到了。"></a>最后分享一个刚踩的坑，上传的图片名称最好就不要带括号了，不然复制到markdown，就识别不到了。</h4>]]></content>
    
    
    <categories>
      
      <category>经验分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PicGo</tag>
      
      <tag>腾讯云COS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Hexo+Icarus搭建个人博客的细节分享（持续更新）</title>
    <link href="undefined2019/08/23/hexoexp/"/>
    <url>2019/08/23/hexoexp/</url>
    
    <content type="html"><![CDATA[<hr><p>本文使用的技术栈：Hexo，css</p><h4 id="搭建一个个人博客，让自己抽空写篇文章总结经验，对于程序员来说是非常有意义的事，但作为一个后端开发，前端技术鸡肋的我，还是选择hexo这样的框架来快速建站。"><a href="#搭建一个个人博客，让自己抽空写篇文章总结经验，对于程序员来说是非常有意义的事，但作为一个后端开发，前端技术鸡肋的我，还是选择hexo这样的框架来快速建站。" class="headerlink" title="搭建一个个人博客，让自己抽空写篇文章总结经验，对于程序员来说是非常有意义的事，但作为一个后端开发，前端技术鸡肋的我，还是选择hexo这样的框架来快速建站。"></a>搭建一个个人博客，让自己抽空写篇文章总结经验，对于程序员来说是非常有意义的事，但作为一个后端开发，前端技术鸡肋的我，还是选择hexo这样的框架来快速建站。</h4><a id="more"></a><p><img src="/images/hexoexp/1.jpg" alt="hexo首页.jpg"></p><h4 id="关于怎么用hexo搭建博客，这里就不赘述了，百度已经有非常详细的教程，本文主要分享一些小细节。"><a href="#关于怎么用hexo搭建博客，这里就不赘述了，百度已经有非常详细的教程，本文主要分享一些小细节。" class="headerlink" title="关于怎么用hexo搭建博客，这里就不赘述了，百度已经有非常详细的教程，本文主要分享一些小细节。"></a>关于怎么用hexo搭建博客，这里就不赘述了，百度已经有非常详细的教程，本文主要分享一些小细节。</h4><h4 id="关于博客主题的选择，这个还是要看个人审美，主流的有next，但我选择比较小众的lcarus。"><a href="#关于博客主题的选择，这个还是要看个人审美，主流的有next，但我选择比较小众的lcarus。" class="headerlink" title="关于博客主题的选择，这个还是要看个人审美，主流的有next，但我选择比较小众的lcarus。"></a>关于博客主题的选择，这个还是要看个人审美，主流的有next，但我选择比较小众的lcarus。</h4><p><img src="/images/hexoexp/2.png" alt="Icarus.png"></p><h4 id="主题的使用非常简单，这里假设你已经搭建好hexo，只需要将下载好的主题文件夹，放在theme目录下，并修改配置文件-config-yml的theme为icarus，然后hexo-cl-g-s-一顿操作之后就能在本地浏览效果了。"><a href="#主题的使用非常简单，这里假设你已经搭建好hexo，只需要将下载好的主题文件夹，放在theme目录下，并修改配置文件-config-yml的theme为icarus，然后hexo-cl-g-s-一顿操作之后就能在本地浏览效果了。" class="headerlink" title="主题的使用非常简单，这里假设你已经搭建好hexo，只需要将下载好的主题文件夹，放在theme目录下，并修改配置文件_config.yml的theme为icarus，然后hexo cl , g ,s 一顿操作之后就能在本地浏览效果了。"></a>主题的使用非常简单，这里假设你已经搭建好hexo，只需要将下载好的主题文件夹，放在theme目录下，并修改配置文件_config.yml的theme为icarus，然后hexo cl , g ,s 一顿操作之后就能在本地浏览效果了。</h4><p><img src="/images/hexoexp/3.png" alt="本地浏览效果.png"></p><h4 id="1-更换主题后页面的中文设置：这个只需修改根目录配置文件的language即可，具体修改为什么，一定要看下主题目录下的language文件夹的文件名，icarus的中文文件名就是zh-CN-所以把目录配置文件的language修改为zh-CN即可"><a href="#1-更换主题后页面的中文设置：这个只需修改根目录配置文件的language即可，具体修改为什么，一定要看下主题目录下的language文件夹的文件名，icarus的中文文件名就是zh-CN-所以把目录配置文件的language修改为zh-CN即可" class="headerlink" title="1.更换主题后页面的中文设置：这个只需修改根目录配置文件的language即可，具体修改为什么，一定要看下主题目录下的language文件夹的文件名，icarus的中文文件名就是zh-CN,所以把目录配置文件的language修改为zh-CN即可"></a>1.更换主题后页面的中文设置：这个只需修改根目录配置文件的language即可，具体修改为什么，一定要看下主题目录下的language文件夹的文件名，icarus的中文文件名就是zh-CN,所以把目录配置文件的language修改为zh-CN即可</h4><p><img src="/images/hexoexp/5.jpg" alt="根目录配置文件.jpg"></p><p><img src="/images/hexoexp/4.jpg" alt="主题附带的语言文件.jpg"></p><h4 id="2-关于图标的问题：主题配置文件中有一些fab开头的图标，实际上是引用了fontawesome的图标，因此如果换上自己喜欢的图标，只需要到这里选择图标后，把代码复制到配置文件即可，我用了微信和qq两个图标放在左侧的个人简介处，因为自带的Facebook，推特那些账号我没有。"><a href="#2-关于图标的问题：主题配置文件中有一些fab开头的图标，实际上是引用了fontawesome的图标，因此如果换上自己喜欢的图标，只需要到这里选择图标后，把代码复制到配置文件即可，我用了微信和qq两个图标放在左侧的个人简介处，因为自带的Facebook，推特那些账号我没有。" class="headerlink" title="2.关于图标的问题：主题配置文件中有一些fab开头的图标，实际上是引用了fontawesome的图标，因此如果换上自己喜欢的图标，只需要到这里选择图标后，把代码复制到配置文件即可，我用了微信和qq两个图标放在左侧的个人简介处，因为自带的Facebook，推特那些账号我没有。"></a>2.关于图标的问题：主题配置文件中有一些fab开头的图标，实际上是引用了fontawesome的图标，因此如果换上自己喜欢的图标，只需要到<a href="https://fontawesome.com/icons?d=gallery/" target="_blank" rel="noopener">这里</a>选择图标后，把代码复制到配置文件即可，我用了微信和qq两个图标放在左侧的个人简介处，因为自带的Facebook，推特那些账号我没有。</h4><p><img src="/images/hexoexp/7.jpg" alt="图标设置.jpg"></p><p><img src="/images/hexoexp/9.jpg" alt="图标搜索.jpg"></p><h4 id="3-改变文章的行距：默认的行距让文章看起来非常挤，因此可以修改一下主题的源码，让行距变大，在浏览器中可以看到文章段落的样式由content这个类来控制，因此，在-icarus-source-css-style-styl中，我们可以看到这个样式的定义，给它加上line-height属性就好了，同理，你还可以给段首加上空格。"><a href="#3-改变文章的行距：默认的行距让文章看起来非常挤，因此可以修改一下主题的源码，让行距变大，在浏览器中可以看到文章段落的样式由content这个类来控制，因此，在-icarus-source-css-style-styl中，我们可以看到这个样式的定义，给它加上line-height属性就好了，同理，你还可以给段首加上空格。" class="headerlink" title="3.改变文章的行距：默认的行距让文章看起来非常挤，因此可以修改一下主题的源码，让行距变大，在浏览器中可以看到文章段落的样式由content这个类来控制，因此，在\icarus\source\css\style.styl中，我们可以看到这个样式的定义，给它加上line-height属性就好了，同理，你还可以给段首加上空格。"></a>3.改变文章的行距：默认的行距让文章看起来非常挤，因此可以修改一下主题的源码，让行距变大，在浏览器中可以看到文章段落的样式由content这个类来控制，因此，在\icarus\source\css\style.styl中，我们可以看到这个样式的定义，给它加上line-height属性就好了，同理，你还可以给段首加上空格。</h4><p><img src="/images/hexoexp/6.jpg" alt="文章样式.jpg"></p><p><img src="/images/hexoexp/8.png" alt="文章行距和段首空格.png"></p>]]></content>
    
    
    <categories>
      
      <category>经验分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【学习日记】微信小程序发送服务通知接口开发</title>
    <link href="undefined2018/12/05/miniInterface/"/>
    <url>2018/12/05/miniInterface/</url>
    
    <content type="html"><![CDATA[<hr><p>本文使用的技术栈：小程序开发、SpringBoot、MyBatis、Redis</p><h4 id="服务通知是小程序或者公众平台向用户发送的一个消息卡片，可用于用户在应用中完成操作后，给予相应反馈；也可以在后台主动向用户推送，引导用户完成一些必要操作。如下图，就是一个典型的服务通知"><a href="#服务通知是小程序或者公众平台向用户发送的一个消息卡片，可用于用户在应用中完成操作后，给予相应反馈；也可以在后台主动向用户推送，引导用户完成一些必要操作。如下图，就是一个典型的服务通知" class="headerlink" title="服务通知是小程序或者公众平台向用户发送的一个消息卡片，可用于用户在应用中完成操作后，给予相应反馈；也可以在后台主动向用户推送，引导用户完成一些必要操作。如下图，就是一个典型的服务通知"></a>服务通知是小程序或者公众平台向用户发送的一个消息卡片，可用于用户在应用中完成操作后，给予相应反馈；也可以在后台主动向用户推送，引导用户完成一些必要操作。如下图，就是一个典型的服务通知</h4><p><img src="/images/mpinterface/1.png" alt="image.png"></p><a id="more"></a><h4 id="今天，我将使用微信提供的接口，开发一个商品购买成功的服务通知。首先看一下官方文档："><a href="#今天，我将使用微信提供的接口，开发一个商品购买成功的服务通知。首先看一下官方文档：" class="headerlink" title="今天，我将使用微信提供的接口，开发一个商品购买成功的服务通知。首先看一下官方文档："></a>今天，我将使用微信提供的接口，开发一个商品购买成功的服务通知。首先看一下官方文档：</h4><p><img src="/images/mpinterface/2.png" alt="image.png"></p><p><img src="/images/mpinterface/3.png" alt="image.png"></p><h4 id="从文档中可以看出，过程并不复杂，参数也容易理解。首先，需要使用getAccessToken接口，获取小程序全局唯一后台接口调用凭据access-token；接着，用这个token，携带模板消息信息调用sendTemplateMessage接口完成操作。"><a href="#从文档中可以看出，过程并不复杂，参数也容易理解。首先，需要使用getAccessToken接口，获取小程序全局唯一后台接口调用凭据access-token；接着，用这个token，携带模板消息信息调用sendTemplateMessage接口完成操作。" class="headerlink" title="从文档中可以看出，过程并不复杂，参数也容易理解。首先，需要使用getAccessToken接口，获取小程序全局唯一后台接口调用凭据access_token；接着，用这个token，携带模板消息信息调用sendTemplateMessage接口完成操作。"></a>从文档中可以看出，过程并不复杂，参数也容易理解。首先，需要使用getAccessToken接口，获取小程序全局唯一后台接口调用凭据access_token；接着，用这个token，携带模板消息信息调用sendTemplateMessage接口完成操作。</h4><h4 id="开发之前，需要在微信公众平台上申请模板消息，它提供了许多类型的模板消息，可根据自己的需要来设置，设置完成后会得到模板id，如下图所示："><a href="#开发之前，需要在微信公众平台上申请模板消息，它提供了许多类型的模板消息，可根据自己的需要来设置，设置完成后会得到模板id，如下图所示：" class="headerlink" title="开发之前，需要在微信公众平台上申请模板消息，它提供了许多类型的模板消息，可根据自己的需要来设置，设置完成后会得到模板id，如下图所示："></a>开发之前，需要在微信公众平台上申请模板消息，它提供了许多类型的模板消息，可根据自己的需要来设置，设置完成后会得到模板id，如下图所示：</h4><p><img src="/images/mpinterface/4.png" alt="image.png"></p><h4 id="最开始，我只是想让用户点击确认订单按钮后，便生成订单并给用户发送服务通知，于是，我便直接在小程序js中调用了这些接口，具体过程代码如下："><a href="#最开始，我只是想让用户点击确认订单按钮后，便生成订单并给用户发送服务通知，于是，我便直接在小程序js中调用了这些接口，具体过程代码如下：" class="headerlink" title="最开始，我只是想让用户点击确认订单按钮后，便生成订单并给用户发送服务通知，于是，我便直接在小程序js中调用了这些接口，具体过程代码如下："></a>最开始，我只是想让用户点击确认订单按钮后，便生成订单并给用户发送服务通知，于是，我便直接在小程序js中调用了这些接口，具体过程代码如下：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">onLoad: function (params) &#123;</span><br><span class="line">  // 首先，获取access_token</span><br><span class="line">  wx.request(&#123;</span><br><span class="line">    url: &apos;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=&amp;secret=&apos;,</span><br><span class="line">    method: &quot;GET&quot;,</span><br><span class="line">    success: function (res) &#123;</span><br><span class="line">      console.log(res, &quot;res&quot;)</span><br><span class="line">      console.log(res.data.access_token, &quot;access_token&quot;)</span><br><span class="line">      //保存access_token</span><br><span class="line">      me.setData(&#123;</span><br><span class="line">        access_token: res.data.access_token,</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">// 点击执行方法</span><br><span class="line">confirmGoods: function (e) &#123;</span><br><span class="line">  var me = this;</span><br><span class="line">  var formId = &quot;5fa22cb20938b888927001f8d8deb71b&quot;;</span><br><span class="line">  // var formId = e.detail.formId;</span><br><span class="line">  var goodsInfo = me.data.goodsInfo;</span><br><span class="line">  var serverUrl = app.serverUrl;</span><br><span class="line">  var confirmId = me.data.id</span><br><span class="line">  var orderId = &quot;&quot;;</span><br><span class="line">  console.log(e);</span><br><span class="line">  console.log(formId);</span><br><span class="line">  // 保存订单到数据库</span><br><span class="line">  wx.request(&#123;</span><br><span class="line">      //保存商品信息至数据库</span><br><span class="line">       ......</span><br><span class="line"></span><br><span class="line">      me.send(formId, res.data.data);</span><br><span class="line">      wx.redirectTo(&#123;</span><br><span class="line">         url: &apos;../goods/goodsCase?tabtype=1&apos;,</span><br><span class="line">       &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"> send:function(formId,orderId)&#123;</span><br><span class="line">  var me = this;</span><br><span class="line">  var fId = formId;</span><br><span class="line">  var goodsInfo = me.data.goodsInfo;</span><br><span class="line">  goodsInfo.orderId = orderId;</span><br><span class="line">  var goodsInfoStr = JSON.stringify(goodsInfo);</span><br><span class="line">  console.log(fId)</span><br><span class="line">  // 网络请求</span><br><span class="line">  var url = &apos;https://api.weixin.qq.com/cgi-bin/message/wxopen/template/send?access_token=&apos; + me.data.access_token;</span><br><span class="line">  // 需要传的参数</span><br><span class="line">  var data = &#123;</span><br><span class="line">    //用户的openid</span><br><span class="line">    touser: &quot;用户openid&quot;,</span><br><span class="line">    //这个是申请的模板消息id，位置在微信公众平台/模板消息中添加并获取</span><br><span class="line">    template_id: &apos;3KKr_Zg8WySQ5qKmn2Fsah9AD6Ls0tDCtT50G5Zh3-8&apos;,</span><br><span class="line">    //点击通知跳转的页面</span><br><span class="line">    page: &apos;/pages/goods/goodsComplete?goodsInfo=&apos; + goodsInfoStr,</span><br><span class="line">    //表单提交场景下，为 submit 事件带上的 formId</span><br><span class="line">    form_id: fId,</span><br><span class="line"></span><br><span class="line">    //模板通知数据</span><br><span class="line">    data: &#123;</span><br><span class="line">      &quot;keyword1&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: goodsInfo.orderId,</span><br><span class="line">        &quot;color&quot;: &quot;#4a4a4a&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;keyword2&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: goodsInfo.goodsName,</span><br><span class="line">        &quot;color&quot;: &quot;#9b9b9b&quot;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;keyword3&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: goodsInfo.expectPrice,</span><br><span class="line">        &quot;color&quot;: &quot;#9b9b9b&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;keyword4&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: goodsInfo.address,</span><br><span class="line">        &quot;color&quot;: &quot;#9b9b9b&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    color: &apos;#ccc&apos;,</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  wx.request(&#123;</span><br><span class="line">    url: url,</span><br><span class="line">    data: data,</span><br><span class="line">    method: &apos;POST&apos;, //此处不能有请求头</span><br><span class="line">    success: function (res) &#123;</span><br><span class="line">      console.log(res, &quot;push msg&quot;);</span><br><span class="line">    &#125;,</span><br><span class="line">    fail: function (err) &#123;</span><br><span class="line">      console.log(err, &quot;push err&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="有几个点这里需要提一下："><a href="#有几个点这里需要提一下：" class="headerlink" title="有几个点这里需要提一下："></a>有几个点这里需要提一下：</h4><blockquote><p>1.form_id的获取，需要在form属性的report-submit设置为”ture”，这样提交时，submit事件就会带上formId。</p></blockquote><blockquote><p>2.每条通知都会消耗一个form_id,通知一旦发送成功，这个form_id就会失效。</p></blockquote><blockquote><p>3.A用户提交表单得到的form_id，只能用来给A用户发送通知，否则也是无效的</p></blockquote><blockquote><p>4.form_id有七天有效期。</p></blockquote><h4 id="通过上面的代码，我的小程序向我的微信成功地推送了一条通知，如下图所示："><a href="#通过上面的代码，我的小程序向我的微信成功地推送了一条通知，如下图所示：" class="headerlink" title="通过上面的代码，我的小程序向我的微信成功地推送了一条通知，如下图所示："></a>通过上面的代码，我的小程序向我的微信成功地推送了一条通知，如下图所示：</h4><p><img src="/images/mpinterface/5.png" alt="image.png"></p><h4 id="虽然我的需求是实现了，但是，仔细思考一下，这种解决方式并不是很理想，并且官方也不推荐这种做法。因为，很多场景并不是用户提交表单的那一瞬间去发送通知，而是需要其他时间，由服务器主动地向用户推送通知。当然，无论是什么场景，官方的建议都是通过后端服务器去调用这些接口。"><a href="#虽然我的需求是实现了，但是，仔细思考一下，这种解决方式并不是很理想，并且官方也不推荐这种做法。因为，很多场景并不是用户提交表单的那一瞬间去发送通知，而是需要其他时间，由服务器主动地向用户推送通知。当然，无论是什么场景，官方的建议都是通过后端服务器去调用这些接口。" class="headerlink" title="虽然我的需求是实现了，但是，仔细思考一下，这种解决方式并不是很理想，并且官方也不推荐这种做法。因为，很多场景并不是用户提交表单的那一瞬间去发送通知，而是需要其他时间，由服务器主动地向用户推送通知。当然，无论是什么场景，官方的建议都是通过后端服务器去调用这些接口。"></a>虽然我的需求是实现了，但是，仔细思考一下，这种解决方式并不是很理想，并且官方也不推荐这种做法。因为，很多场景并不是用户提交表单的那一瞬间去发送通知，而是需要其他时间，由服务器主动地向用户推送通知。当然，无论是什么场景，官方的建议都是通过后端服务器去调用这些接口。</h4><p><img src="/images/mpinterface/6.png" alt="image.png"></p><h4 id="接下来，我就对我的后端代码进行改造，编写一些工具类和实体类："><a href="#接下来，我就对我的后端代码进行改造，编写一些工具类和实体类：" class="headerlink" title="接下来，我就对我的后端代码进行改造，编写一些工具类和实体类："></a>接下来，我就对我的后端代码进行改造，编写一些工具类和实体类：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">//模板消息信息实体类</span><br><span class="line">public class WechatTemplate &#123;</span><br><span class="line"></span><br><span class="line">    //用户openId</span><br><span class="line">    private String touser;</span><br><span class="line"></span><br><span class="line">    //模板Id</span><br><span class="line">    private String template_id;</span><br><span class="line"></span><br><span class="line">    //通知跳转路径（小程序内路径）</span><br><span class="line">    private String page;</span><br><span class="line"></span><br><span class="line">    //接收到的form_id</span><br><span class="line">    private String form_id;</span><br><span class="line"></span><br><span class="line">    //通知具体数据信息</span><br><span class="line">    private Map&lt;String, TemplateData&gt; data;</span><br><span class="line"></span><br><span class="line">    //字体颜色，非必选项</span><br><span class="line">    private String color;</span><br><span class="line"></span><br><span class="line">    // ...get、set、toString方法省略...    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//getAccessToken接口返回实体</span><br><span class="line">public class WxToken &#123;</span><br><span class="line"></span><br><span class="line">    //获取到的凭证</span><br><span class="line">    private String access_token;</span><br><span class="line"></span><br><span class="line">    //凭证有效时间，单位：秒。目前是7200秒之内的值。</span><br><span class="line">    private String expires_in;</span><br><span class="line"></span><br><span class="line">    //错误码</span><br><span class="line">    private String errcode;</span><br><span class="line"></span><br><span class="line">    //错误信息</span><br><span class="line">    private String errmsg;</span><br><span class="line">    // ...get、set、toString方法省略...    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//模板通知内容实体</span><br><span class="line">public class TemplateData &#123;</span><br><span class="line">    private String value;</span><br><span class="line">    //该值的字体颜色</span><br><span class="line">    private String color;</span><br><span class="line">    // ...get、set、toString方法省略...    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//微信接口返回实体</span><br><span class="line">public class WxResponse &#123;</span><br><span class="line">    private Integer  errcode;</span><br><span class="line">    private String errmsg;</span><br><span class="line">    private String msgid;</span><br><span class="line">    // ...get、set、toString方法省略...  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">import com.google.gson.Gson;</span><br><span class="line">import com.yeykai.pojo.*;</span><br><span class="line">import com.yeykai.service.WxService;</span><br><span class="line">import com.yeykai.utils.HttpClientUtil;</span><br><span class="line">import com.yeykai.utils.JsonUtils;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import java.util.TreeMap;</span><br><span class="line"></span><br><span class="line">@Service</span><br><span class="line">public class WxServiceimpl implements WxService &#123;</span><br><span class="line"></span><br><span class="line">    //日志输出</span><br><span class="line">    private static Logger logger = LoggerFactory.getLogger(WxServiceimpl.class);</span><br><span class="line"></span><br><span class="line">    //微信模板接口</span><br><span class="line">    private final String SEND_TEMPLAYE_MESSAGE_URL =&quot;https://api.weixin.qq.com/cgi-bin/message/wxopen/template/send?access_token=ACCESS_TOKEN&quot;;</span><br><span class="line"></span><br><span class="line">    private final String APPID = &quot;你的appid&quot;;</span><br><span class="line">    private final String SECRET = &quot;你的app密钥&quot;;</span><br><span class="line">    //获取微信ACCESS_TOKEN接口url</span><br><span class="line">    private final String aturl = &quot;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=&quot; + APPID</span><br><span class="line">            + &quot;&amp;secret=&quot; + SECRET;</span><br><span class="line"></span><br><span class="line">     public WxToken getAccess_token() &#123;</span><br><span class="line">                String access_token = &quot;&quot;;</span><br><span class="line">                //获取ACCESS_TOKEN</span><br><span class="line">                String httpGet = HttpClientUtil.doGet(aturl);</span><br><span class="line">                Gson gson=new Gson();</span><br><span class="line">                //得到返回对象</span><br><span class="line">                WxToken jsonResult=new WxToken();</span><br><span class="line">                jsonResult = gson.fromJson(httpGet, WxToken.class);</span><br><span class="line">                 //判断请求是否成功</span><br><span class="line">                if(jsonResult.getErrcode() == null)&#123;</span><br><span class="line">                   //输出返回结果</span><br><span class="line">                    System.out.println(&quot;get请求结果:&quot; + httpGet);</span><br><span class="line">                    access_token = jsonResult.getAccess_token();</span><br><span class="line">                    String expires_in =jsonResult.getExpires_in();</span><br><span class="line">                    logger.info(&quot;access_token&#123;&#125;:  expires_in&#123;&#125;:&quot;,access_token,expires_in);</span><br><span class="line">                &#125;else &#123;</span><br><span class="line">                    logger.info(&quot;token获取失败，错误码：&quot;+jsonResult.getErrcode());</span><br><span class="line">                    logger.info(&quot;错误信息：&quot;+jsonResult.getErrmsg());</span><br><span class="line">                &#125;</span><br><span class="line">                //返回ACCESS_TOKEN</span><br><span class="line">                return jsonResult;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    //发送模板信息</span><br><span class="line">    @Override</span><br><span class="line">    public void sendTemplateMessage(WechatTemplate wechatTemplate) &#123;</span><br><span class="line"></span><br><span class="line">        //获取ACCESS_TOKEN</span><br><span class="line">        WxServiceimpl wx = new WxServiceimpl();</span><br><span class="line">        WxToken wxToken = wx.getAccess_token();</span><br><span class="line">        String access_token=wxToken.getAccess_token();</span><br><span class="line"></span><br><span class="line">String jsonString = JsonUtils.objectToJson(wechatTemplate);</span><br><span class="line">//填充请求url</span><br><span class="line">String requestUrl = SEND_TEMPLAYE_MESSAGE_URL.replace(&quot;ACCESS_TOKEN&quot;, access_token);</span><br><span class="line">        //发送 post请求 发送json数据</span><br><span class="line">logger.info(&quot;请求参数:&quot;+jsonString);</span><br><span class="line">String json = HttpClientUtil.doPostJson(requestUrl, jsonString);</span><br><span class="line">WxResponse weiXinResponse = new Gson().fromJson(json, WxResponse.class);</span><br><span class="line">logger.info(&quot;jsonObject=&quot;+weiXinResponse);</span><br><span class="line">if (null != weiXinResponse) &#123;</span><br><span class="line">int errorCode = weiXinResponse.getErrcode();</span><br><span class="line">if (0 == errorCode) &#123;</span><br><span class="line">logger.info(&quot;模板消息发送成功&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">String errorMsg = weiXinResponse.getErrmsg();</span><br><span class="line">logger.info(&quot;模板消息发送失败,错误是 &quot;+errorCode+&quot;,错误信息是&quot;+ errorMsg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实体类和业务类已经完成，接下来，开发Controller层，最后做前后端联调测试。"><a href="#实体类和业务类已经完成，接下来，开发Controller层，最后做前后端联调测试。" class="headerlink" title="实体类和业务类已经完成，接下来，开发Controller层，最后做前后端联调测试。"></a>实体类和业务类已经完成，接下来，开发Controller层，最后做前后端联调测试。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">//用户确认商品信息后，提交订单，调用该接口</span><br><span class="line">@PostMapping(&quot;/addOrder&quot;)</span><br><span class="line">public IMoocJSONResult addOrder(String confirmId,String formId) &#123;</span><br><span class="line">    //订单id</span><br><span class="line">String id = &quot;&quot;;</span><br><span class="line">//模板消息对象</span><br><span class="line">WechatTemplate wechatTemplate = new WechatTemplate();</span><br><span class="line">if (confirmId!=null)</span><br><span class="line">&#123;</span><br><span class="line">ConfirmGoods confirmGoods = orderService.queryConfirm(confirmId);</span><br><span class="line">String buyerId = confirmGoods.getBuyerId();</span><br><span class="line">String goodsID= confirmGoods.getGoodsId();</span><br><span class="line">Goods goodsinfo = goodsService.queryGoodsInfo(goodsID);</span><br><span class="line"></span><br><span class="line">            //...数据库操作省略</span><br><span class="line"></span><br><span class="line">String goodsJsonStr = JsonUtils.objectToJson(goodsinfo);</span><br><span class="line"></span><br><span class="line">wechatTemplate.setTemplate_id(&quot;模板id&quot;);</span><br><span class="line">          //设置用户的OpenId</span><br><span class="line">wechatTemplate.setTouser(&quot;openid&quot;);</span><br><span class="line">//设置跳转页面路径</span><br><span class="line">wechatTemplate.setPage(&quot;/pages/goods/goodsComplete?goodsInfo=&quot;+goodsJsonStr);</span><br><span class="line">//设置form_Id</span><br><span class="line">wechatTemplate.setForm_id(formId);</span><br><span class="line"></span><br><span class="line">            //补充通知内容数据</span><br><span class="line">Map&lt;String,TemplateData&gt; m = new TreeMap&lt;String,TemplateData&gt;();</span><br><span class="line">TemplateData keyword1 = new TemplateData();</span><br><span class="line">keyword1.setValue(id);</span><br><span class="line">m.put(&quot;keyword1&quot;, keyword1);</span><br><span class="line">TemplateData keyword2 = new TemplateData();</span><br><span class="line">keyword2.setValue(goodsinfo.getGoodsName());</span><br><span class="line">m.put(&quot;keyword2&quot;, keyword2);</span><br><span class="line">TemplateData keyword3 = new TemplateData();</span><br><span class="line">keyword3.setValue(goodsinfo.getCreateTime().toString());</span><br><span class="line">m.put(&quot;keyword3&quot;, keyword3);</span><br><span class="line">TemplateData keyword4 = new TemplateData();</span><br><span class="line">keyword4.setValue(goodsinfo.getPrice().toString()+&quot;元&quot;);</span><br><span class="line">m.put(&quot;keyword4&quot;, keyword4);</span><br><span class="line">TemplateData keyword5 = new TemplateData();</span><br><span class="line">keyword5.setValue(goodsinfo.getAddress());</span><br><span class="line">m.put(&quot;keyword5&quot;, keyword5);</span><br><span class="line">wechatTemplate.setData(m);</span><br><span class="line"></span><br><span class="line">            //发送服务通知</span><br><span class="line">wxService.sendTemplateMessage(wechatTemplate);</span><br><span class="line">return IMoocJSONResult.ok(id);</span><br><span class="line">&#125;</span><br><span class="line">return IMoocJSONResult.errorMsg(&quot;生成订单失败&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="开发完毕，这次，我采用谷歌浏览器很好用的一款REST-API测试工具来测试，测试使用的form-id是我预先用自己的微信发送请求采集好的。如下图所示："><a href="#开发完毕，这次，我采用谷歌浏览器很好用的一款REST-API测试工具来测试，测试使用的form-id是我预先用自己的微信发送请求采集好的。如下图所示：" class="headerlink" title="开发完毕，这次，我采用谷歌浏览器很好用的一款REST API测试工具来测试，测试使用的form_id是我预先用自己的微信发送请求采集好的。如下图所示："></a>开发完毕，这次，我采用谷歌浏览器很好用的一款REST API测试工具来测试，测试使用的form_id是我预先用自己的微信发送请求采集好的。如下图所示：</h4><p><img src="/images/mpinterface/7.png" alt="image.png"></p><h4 id="现在点击发送请求，结果如下："><a href="#现在点击发送请求，结果如下：" class="headerlink" title="现在点击发送请求，结果如下："></a>现在点击发送请求，结果如下：</h4><h4 id="日志打印结果成功"><a href="#日志打印结果成功" class="headerlink" title="日志打印结果成功"></a>日志打印结果成功</h4><p><img src="/images/mpinterface/8.png" alt="image.png"></p><h4 id="测试结果返回正常"><a href="#测试结果返回正常" class="headerlink" title="测试结果返回正常"></a>测试结果返回正常</h4><p><img src="/images/mpinterface/9.png" alt="image.png"></p><h4 id="最后看一下手机上收到的通知，由于我的小程序还没申请上线，所以小程序头像和名称就没有啦"><a href="#最后看一下手机上收到的通知，由于我的小程序还没申请上线，所以小程序头像和名称就没有啦" class="headerlink" title="最后看一下手机上收到的通知，由于我的小程序还没申请上线，所以小程序头像和名称就没有啦"></a>最后看一下手机上收到的通知，由于我的小程序还没申请上线，所以小程序头像和名称就没有啦</h4><p><img src="/images/mpinterface/10.png" alt="image.png"></p><h4 id="点击进入小程序后，数据接收正常"><a href="#点击进入小程序后，数据接收正常" class="headerlink" title="点击进入小程序后，数据接收正常"></a>点击进入小程序后，数据接收正常</h4><p><img src="/images/mpinterface/11.png" alt="image.png"></p><hr><h4 id="最后总结一下："><a href="#最后总结一下：" class="headerlink" title="最后总结一下："></a>最后总结一下：</h4><blockquote><p>1.再简单的接口，不动手写一下，是发现不了自己的问题的</p></blockquote><blockquote><p>2.使用这类微信提供的接口时，一定要看清每个url对应的功能，我就因为这个错误找了半天bug，一直不相信自己会把这个写错。emmm</p></blockquote><blockquote><p>3.form_id的采集可以改造一下前端代码，给每个form表单的submit都加上form_id,然后把它们收集起来，存入数据库，需要时在用它主动向用户推送通知，当然，也要注意推送频率，被用户举报后果严重。</p></blockquote><blockquote><p>最常遇到的错误码：47001和40003。47001一般是提交请求的数据格式出错，这里可以把提交的数据打印再日志上，通过json格式检验工具<a href="http://http://www.bejson.com//" target="_blank" rel="noopener"></a>来检查格式问题。</p></blockquote><blockquote><p>40003则是用户的openId错误，或是获取ACCESS_TOKEN时填入的appid出错，还有可能是url错误，例如把 “<a href="https://api.weixin.qq.com/cgi-bin/message/wxopen/template/send?access_token=ACCESS_TOKEN&quot;错写成&quot;https://api.weixin.qq.com/cgi-bin/message/wxopen/template/uniform_send?access_token=ACCESS_TOKEN&quot;,emmm,就是我。" target="_blank" rel="noopener">https://api.weixin.qq.com/cgi-bin/message/wxopen/template/send?access_token=ACCESS_TOKEN&quot;错写成&quot;https://api.weixin.qq.com/cgi-bin/message/wxopen/template/uniform_send?access_token=ACCESS_TOKEN&quot;,emmm,就是我。</a></p></blockquote><blockquote><p>其他的错误官方也给出了一些原因：</p></blockquote><p><img src="/images/mpinterface/12.png" alt="image.png"></p><hr><h4 id="最后，分享一张壁纸"><a href="#最后，分享一张壁纸" class="headerlink" title="最后，分享一张壁纸"></a>最后，分享一张壁纸</h4><p><img src="/images/mpinterface/13.png" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>学习日记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>SpringBoot</tag>
      
      <tag>微信小程序</tag>
      
      <tag>myBatis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【学习日记】微信小程序仿朋友圈发布商品信息及图片</title>
    <link href="undefined2018/09/29/miniPublishImg/"/>
    <url>2018/09/29/miniPublishImg/</url>
    
    <content type="html"><![CDATA[<hr><p>本文使用的技术栈：小程序开发、SpringBoot、MyBatis、Redis</p><h4 id="今天要写一个商城项目中的发布商品模块，需求跟闲鱼这样的app基本一致，就是基本的上传表单数据和图片。图片模块我想采用类似朋友圈的方式来完成，符合大部分用户的操作逻辑。"><a href="#今天要写一个商城项目中的发布商品模块，需求跟闲鱼这样的app基本一致，就是基本的上传表单数据和图片。图片模块我想采用类似朋友圈的方式来完成，符合大部分用户的操作逻辑。" class="headerlink" title="今天要写一个商城项目中的发布商品模块，需求跟闲鱼这样的app基本一致，就是基本的上传表单数据和图片。图片模块我想采用类似朋友圈的方式来完成，符合大部分用户的操作逻辑。"></a>今天要写一个商城项目中的发布商品模块，需求跟闲鱼这样的app基本一致，就是基本的上传表单数据和图片。图片模块我想采用类似朋友圈的方式来完成，符合大部分用户的操作逻辑。</h4><p><img src="/images/publish/1.jpg" alt="微信图片_20180928230850.jpg"></p><a id="more"></a><h4 id="现在朋友圈发图片已经可以拖拽改变图片顺序或删除图片了，但是用小程序实现拖拽功能太麻烦了。所以，我将换一种方式来实现图片删除和预览，最后，再写两个后端接口，把商品信息和图片存入数据库。"><a href="#现在朋友圈发图片已经可以拖拽改变图片顺序或删除图片了，但是用小程序实现拖拽功能太麻烦了。所以，我将换一种方式来实现图片删除和预览，最后，再写两个后端接口，把商品信息和图片存入数据库。" class="headerlink" title="现在朋友圈发图片已经可以拖拽改变图片顺序或删除图片了，但是用小程序实现拖拽功能太麻烦了。所以，我将换一种方式来实现图片删除和预览，最后，再写两个后端接口，把商品信息和图片存入数据库。"></a>现在朋友圈发图片已经可以拖拽改变图片顺序或删除图片了，但是用小程序实现拖拽功能太麻烦了。所以，我将换一种方式来实现图片删除和预览，最后，再写两个后端接口，把商品信息和图片存入数据库。</h4><blockquote><h4 id="这里前端用到了Vant-Weapp的UI库-https-github-com-youzan-vant-weapp"><a href="#这里前端用到了Vant-Weapp的UI库-https-github-com-youzan-vant-weapp" class="headerlink" title="这里前端用到了Vant Weapp的UI库 https://github.com/youzan/vant-weapp"></a>这里前端用到了Vant Weapp的UI库 <a href="https://github.com/youzan/vant-weapp" target="_blank" rel="noopener">https://github.com/youzan/vant-weapp</a></h4></blockquote><h4 id="先来看看前端页面的代码"><a href="#先来看看前端页面的代码" class="headerlink" title="先来看看前端页面的代码"></a>先来看看前端页面的代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"page"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">bindsubmit</span>=<span class="string">'send'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-cell-group</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">van-field</span></span></span><br><span class="line"><span class="tag">          <span class="attr">required</span></span></span><br><span class="line"><span class="tag">          <span class="attr">clearable</span></span></span><br><span class="line"><span class="tag">          <span class="attr">left-icon</span>=<span class="string">"gift"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">"goodsName"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">label</span>=<span class="string">"商品名称"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">icon</span>=<span class="string">"question"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">"请输入商品名"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">bind:click-icon</span>=<span class="string">"onClickIcon"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">van-field</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">"textarea"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">label</span>=<span class="string">"描述"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">left-icon</span>=<span class="string">"records"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">"goodsDesc"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">"请输入5-50个字"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">autosize</span></span></span><br><span class="line"><span class="tag">          <span class="attr">required</span></span></span><br><span class="line"><span class="tag">          <span class="attr">border</span>=<span class="string">"&#123;&#123; false &#125;&#125;"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-cell-group</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"image_content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'image'</span> <span class="attr">wx:for</span>=<span class="string">"&#123;&#123;img_url&#125;&#125;"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">"deleteImg"</span> <span class="attr">mode</span>=<span class="string">"aspectFill"</span>  <span class="attr">data-index</span>=<span class="string">'&#123;&#123;index&#125;&#125;'</span> <span class="attr">src</span>=<span class="string">"/img/deleteImg.png"</span> <span class="attr">bindtap</span>=<span class="string">"deleteImg"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">"moment_img"</span> <span class="attr">mode</span>=<span class="string">"aspectFill"</span> <span class="attr">data-index</span>=<span class="string">'&#123;&#123;index&#125;&#125;'</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;item&#125;&#125;"</span> <span class="attr">bindtap</span>=<span class="string">"previewImg"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'image'</span> <span class="attr">style</span>=<span class="string">'display:&#123;&#123;hideAdd?"none":"block"&#125;&#125;'</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">image</span> <span class="attr">bindtap</span>=<span class="string">"chooseimage"</span> <span class="attr">class</span>=<span class="string">"moment_img"</span> <span class="attr">src</span>=<span class="string">'/img/addImg.png'</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">van-cell-group</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">van-field</span></span></span><br><span class="line"><span class="tag">          <span class="attr">required</span></span></span><br><span class="line"><span class="tag">          <span class="attr">clearable</span></span></span><br><span class="line"><span class="tag">          <span class="attr">left-icon</span>=<span class="string">"gold-coin"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">"goodsPrice"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">label</span>=<span class="string">"单价"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">icon</span>=<span class="string">"question"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">"请输入数字"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">bind:click-icon</span>=<span class="string">"onClickIcon"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">van-field</span></span></span><br><span class="line"><span class="tag">          <span class="attr">value</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">label</span>=<span class="string">"数量"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">left-icon</span>=<span class="string">"exchange"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">"goodsNum"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">          <span class="attr">required</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">van-field</span></span></span><br><span class="line"><span class="tag">          <span class="attr">left-icon</span>=<span class="string">"chat"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">"goodsPhone"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">label</span>=<span class="string">"联系方式"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">required</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">van-field</span></span></span><br><span class="line"><span class="tag">          <span class="attr">left-icon</span>=<span class="string">"location"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">value</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">"goodsAddress"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">label</span>=<span class="string">"交易地点"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">"例：学瀚楼下"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">required</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-cell-group</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"publishBtn"</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">form-type</span>=<span class="string">'submit'</span>&gt;</span>发布<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="效果如下图："><a href="#效果如下图：" class="headerlink" title="效果如下图："></a>效果如下图：</h4><p><img src="/images/publish/2.jpg" alt="微信图片_20180929165257.jpg"></p><h4 id="表单部分代码很简单，所以这里主要分析添加图片的代码逻辑。第一步，找一张添加照片的图标绑定一个wx-chooseImage事件，定义一个全局变量count作为当前选择的图片数量，使用户选择的图片在9张以内；定义一个数组，用于存放当前图片的url，在用户选择完照片后，该数组会更新，并用wx-for渲染至前端页面。"><a href="#表单部分代码很简单，所以这里主要分析添加图片的代码逻辑。第一步，找一张添加照片的图标绑定一个wx-chooseImage事件，定义一个全局变量count作为当前选择的图片数量，使用户选择的图片在9张以内；定义一个数组，用于存放当前图片的url，在用户选择完照片后，该数组会更新，并用wx-for渲染至前端页面。" class="headerlink" title="表单部分代码很简单，所以这里主要分析添加图片的代码逻辑。第一步，找一张添加照片的图标绑定一个wx.chooseImage事件，定义一个全局变量count作为当前选择的图片数量，使用户选择的图片在9张以内；定义一个数组，用于存放当前图片的url，在用户选择完照片后，该数组会更新，并用wx:for渲染至前端页面。"></a>表单部分代码很简单，所以这里主要分析添加图片的代码逻辑。第一步，找一张添加照片的图标绑定一个wx.chooseImage事件，定义一个全局变量count作为当前选择的图片数量，使用户选择的图片在9张以内；定义一个数组，用于存放当前图片的url，在用户选择完照片后，该数组会更新，并用wx:for渲染至前端页面。</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">chooseimage: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="keyword">var</span> me = <span class="keyword">this</span>;</span><br><span class="line">   <span class="comment">//动态更新当前用户可以上传的图片数</span></span><br><span class="line">   <span class="keyword">var</span> count = <span class="number">9</span> - that.data.img_url.length;</span><br><span class="line">   wx.chooseImage(&#123;</span><br><span class="line">     count: count, <span class="comment">// 默认9</span></span><br><span class="line">     sizeType: [<span class="string">'original'</span>, <span class="string">'compressed'</span>], <span class="comment">// 可以指定是原图还是压缩图，默认二者都有</span></span><br><span class="line">     sourceType: [<span class="string">'album'</span>, <span class="string">'camera'</span>], <span class="comment">// 可以指定来源是相册还是相机，默认二者都有</span></span><br><span class="line">     success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (res.tempFilePaths.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">         <span class="comment">//把每次选择的图push进数组</span></span><br><span class="line">         <span class="keyword">let</span> img_url = that.data.img_url;</span><br><span class="line">         <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; res.tempFilePaths.length; i++) &#123;</span><br><span class="line">           img_url.push(res.tempFilePaths[i])</span><br><span class="line">         &#125;</span><br><span class="line">         me.setData(&#123;</span><br><span class="line">           img_url: img_url</span><br><span class="line">         &#125;)</span><br><span class="line"></span><br><span class="line">         <span class="comment">//图如果满了9张，不显示添加图片图标</span></span><br><span class="line">         <span class="keyword">if</span> (that.data.img_url.length &gt;= <span class="number">8</span>) &#123;</span><br><span class="line">           me.setData(&#123;</span><br><span class="line">             hideAdd: <span class="number">1</span></span><br><span class="line">           &#125;)</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           me.setData(&#123;</span><br><span class="line">             hideAdd: <span class="number">0</span></span><br><span class="line">           &#125;)</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="当图片数量达到9张，隐藏添加图片图标"><a href="#当图片数量达到9张，隐藏添加图片图标" class="headerlink" title="当图片数量达到9张，隐藏添加图片图标"></a>当图片数量达到9张，隐藏添加图片图标</h4><p><img src="/images/publish/3.png" alt="图片.png"></p><h4 id="第二步，给图片加上预览和删除功能，预览功能使用wx-previewImage绑定图片的索引值即可；删除功能则是在图片右上角加上一个删除图标来绑定删除事件，删除后实时更新图片列表。"><a href="#第二步，给图片加上预览和删除功能，预览功能使用wx-previewImage绑定图片的索引值即可；删除功能则是在图片右上角加上一个删除图标来绑定删除事件，删除后实时更新图片列表。" class="headerlink" title="第二步，给图片加上预览和删除功能，预览功能使用wx.previewImage绑定图片的索引值即可；删除功能则是在图片右上角加上一个删除图标来绑定删除事件，删除后实时更新图片列表。"></a>第二步，给图片加上预览和删除功能，预览功能使用wx.previewImage绑定图片的索引值即可；删除功能则是在图片右上角加上一个删除图标来绑定删除事件，删除后实时更新图片列表。</h4><p><img src="/images/publish/4.png" alt="图片.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//预览图片</span></span><br><span class="line">previewImg:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> me = <span class="keyword">this</span>;</span><br><span class="line">  <span class="keyword">var</span> img_url = me.data.img_url;</span><br><span class="line">  <span class="keyword">var</span> index = e.target.dataset.index;</span><br><span class="line">  wx.previewImage(&#123;</span><br><span class="line">    urls: img_url,</span><br><span class="line">    current : img_url[index],</span><br><span class="line">    success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除图片</span></span><br><span class="line">deleteImg: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> me = <span class="keyword">this</span>;</span><br><span class="line">  <span class="keyword">var</span> img_url = me.data.img_url;</span><br><span class="line">  <span class="keyword">var</span> index = e.target.dataset.index;</span><br><span class="line">  img_url.splice(index, <span class="number">1</span>);</span><br><span class="line">  me.setData(&#123;</span><br><span class="line">    img_url: img_url,</span><br><span class="line">    <span class="comment">//若当前图片超过9张，则隐藏添加图标；少于9张则显示添加图标。</span></span><br><span class="line">    hideAdd: me.data.img_url.length &lt;<span class="number">9</span> ? <span class="literal">false</span> : <span class="literal">true</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="第三步，上传商品信息和图片，我将这个功能分为两部分完成，首先将表单数据先上传，再将图片上传。这里假设用户已经成功使用微信登录小程序，且登录态保存已保存在本地缓存。在表单数据上传成功后，会返回一个商品ID到前端，再调用上传图片方法，将商品ID和每张图片的相对路径保存至数据库。实现代码如下。"><a href="#第三步，上传商品信息和图片，我将这个功能分为两部分完成，首先将表单数据先上传，再将图片上传。这里假设用户已经成功使用微信登录小程序，且登录态保存已保存在本地缓存。在表单数据上传成功后，会返回一个商品ID到前端，再调用上传图片方法，将商品ID和每张图片的相对路径保存至数据库。实现代码如下。" class="headerlink" title="第三步，上传商品信息和图片，我将这个功能分为两部分完成，首先将表单数据先上传，再将图片上传。这里假设用户已经成功使用微信登录小程序，且登录态保存已保存在本地缓存。在表单数据上传成功后，会返回一个商品ID到前端，再调用上传图片方法，将商品ID和每张图片的相对路径保存至数据库。实现代码如下。"></a>第三步，上传商品信息和图片，我将这个功能分为两部分完成，首先将表单数据先上传，再将图片上传。这里假设用户已经成功使用微信登录小程序，且登录态保存已保存在本地缓存。在表单数据上传成功后，会返回一个商品ID到前端，再调用上传图片方法，将商品ID和每张图片的相对路径保存至数据库。实现代码如下。</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//上传商品信息</span></span><br><span class="line">send:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> me = <span class="keyword">this</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(e);</span><br><span class="line">    <span class="keyword">var</span> goodsName = e.detail.value.goodsName;</span><br><span class="line">    <span class="keyword">var</span> goodsDesc = e.detail.value.goodsDesc;</span><br><span class="line">    <span class="keyword">var</span> goodsPrice = e.detail.value.goodsPrice;</span><br><span class="line">    <span class="keyword">var</span> goodsNum = e.detail.value.goodsNum;</span><br><span class="line">    <span class="keyword">var</span> goodsAddress = e.detail.value.goodsAddress;</span><br><span class="line">    <span class="keyword">var</span> goodsPhone = e.detail.value.goodsPhone;</span><br><span class="line">    <span class="keyword">var</span> thirdSession = wx.getStorageSync(<span class="string">"thirdsession"</span>)</span><br><span class="line">    wx.showLoading(&#123;</span><br><span class="line">      title: <span class="string">'发布中--'</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">var</span> serverUrl = app.serverUrl;</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">      url: serverUrl + <span class="string">'/goods/uploadGoods'</span>,</span><br><span class="line">      data: &#123;</span><br><span class="line">        thirdSession: thirdSession,</span><br><span class="line">        goodsName: goodsName,  </span><br><span class="line">        goodsDesc: goodsDesc,</span><br><span class="line">        goodsPrice: goodsPrice,</span><br><span class="line">        goodsNum: goodsNum,</span><br><span class="line">        goodsAddress: goodsAddress,</span><br><span class="line">        goodsPhone: goodsPhone,</span><br><span class="line">      &#125;,</span><br><span class="line">      method: <span class="string">"GET"</span>,</span><br><span class="line">      success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">        wx.hideLoading();</span><br><span class="line">        <span class="built_in">console</span>.log(res.data.data);</span><br><span class="line">        <span class="comment">//商品信息上传成功后，上传商品图片</span></span><br><span class="line">        me.uploadGoodsImg(res.data.data);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="需要注意的是，小程序的wx-uploadFile接口的资源路径是String类的。所以多图上传时，我会递归调用这个接口来完成。"><a href="#需要注意的是，小程序的wx-uploadFile接口的资源路径是String类的。所以多图上传时，我会递归调用这个接口来完成。" class="headerlink" title="需要注意的是，小程序的wx.uploadFile接口的资源路径是String类的。所以多图上传时，我会递归调用这个接口来完成。"></a>需要注意的是，小程序的wx.uploadFile接口的资源路径是String类的。所以多图上传时，我会递归调用这个接口来完成。</h4><p><img src="/images/publish/5.png" alt="图片.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//上传图片</span></span><br><span class="line">uploadGoodsImg: <span class="function"><span class="keyword">function</span> (<span class="params">goodsId</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">var</span> me = <span class="keyword">this</span>;</span><br><span class="line">   <span class="keyword">var</span> imgFilePaths = me.data.img_url;</span><br><span class="line">   <span class="keyword">var</span> count = me.data.count;</span><br><span class="line">   <span class="keyword">var</span> serverUrl = app.serverUrl;</span><br><span class="line">   wx.showLoading(&#123;</span><br><span class="line">     title: <span class="string">'上传图片中--'</span>,</span><br><span class="line">   &#125;)</span><br><span class="line">   wx.uploadFile(&#123;</span><br><span class="line">     url: serverUrl + <span class="string">'/goods/uploadGoodsImg'</span>,</span><br><span class="line">     filePath: imgFilePaths[count],</span><br><span class="line">     name: <span class="string">'file'</span>,</span><br><span class="line">     formData: &#123;</span><br><span class="line">       goodsId: goodsId</span><br><span class="line">     &#125;,</span><br><span class="line">     success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">         <span class="comment">//可统计成功上传图片数</span></span><br><span class="line">     &#125;,</span><br><span class="line">     fail: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">         <span class="comment">//可统计上传失败图片数</span></span><br><span class="line">     &#125;,</span><br><span class="line">     complete: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">       count++;</span><br><span class="line">       me.setData(&#123;</span><br><span class="line">         count: count</span><br><span class="line">       &#125;)</span><br><span class="line">       <span class="keyword">if</span> (count &gt;= imgFilePaths.length) &#123;</span><br><span class="line">         <span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(res.data);</span><br><span class="line">         <span class="built_in">console</span>.log(data);</span><br><span class="line">         wx.hideLoading();</span><br><span class="line">         <span class="keyword">if</span> (data.status == <span class="number">200</span>) &#123;</span><br><span class="line">           wx.hideLoading();</span><br><span class="line">           wx.showToast(&#123;</span><br><span class="line">             title: <span class="string">'上传成功!~~'</span>,</span><br><span class="line">             icon: <span class="string">'success'</span></span><br><span class="line">           &#125;);</span><br><span class="line">           me.setData(&#123;</span><br><span class="line">             count: <span class="number">0</span></span><br><span class="line">           &#125;)</span><br><span class="line">         &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.status == <span class="number">500</span>) &#123;</span><br><span class="line">           wx.showToast(&#123;</span><br><span class="line">             title: data.msg,</span><br><span class="line">           &#125;);</span><br><span class="line">         &#125;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="comment">//图片未上传完，递归调用本方法。</span></span><br><span class="line">         me.uploadGoodsImg(goodsId);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="第四步，后端接口使用IO流工具IOUtils将图片写入到指定的路径下，并将相对路径保存至数据库。这里存放图片路径采用了一个单独的表。具体代码如下："><a href="#第四步，后端接口使用IO流工具IOUtils将图片写入到指定的路径下，并将相对路径保存至数据库。这里存放图片路径采用了一个单独的表。具体代码如下：" class="headerlink" title="第四步，后端接口使用IO流工具IOUtils将图片写入到指定的路径下，并将相对路径保存至数据库。这里存放图片路径采用了一个单独的表。具体代码如下："></a>第四步，后端接口使用IO流工具IOUtils将图片写入到指定的路径下，并将相对路径保存至数据库。这里存放图片路径采用了一个单独的表。具体代码如下：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">//保存商品信息</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/uploadGoods"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> IMoocJSONResult <span class="title">uploadFace</span><span class="params">(String thirdSession,String goodsName,</span></span></span><br><span class="line"><span class="function"><span class="params">String goodsDesc,<span class="keyword">double</span> goodsPrice,String goodsPhone,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> goodsNum,String goodsAddress)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (StringUtils.isBlank(thirdSession)) &#123;</span><br><span class="line"><span class="keyword">return</span> IMoocJSONResult.errorMsg(<span class="string">"thirdSession is none"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">       String value = (String) redis.get(<span class="string">"Wxuser-redis-session:"</span>+thirdSession);</span><br><span class="line">       System.out.println(value);</span><br><span class="line">       <span class="keyword">if</span> (StringUtils.isBlank(value)) &#123;</span><br><span class="line">           <span class="keyword">return</span> IMoocJSONResult.errorMsg(<span class="string">"session timeout"</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//解析json格式的str</span></span><br><span class="line">       JSONObject json = JSONObject.parseObject(value);</span><br><span class="line">       String openId = json.getString(<span class="string">"openid"</span>);</span><br><span class="line"></span><br><span class="line">       String goodsId = sid.nextShort();</span><br><span class="line"></span><br><span class="line">Goods goods = <span class="keyword">new</span> Goods();</span><br><span class="line">goods.setId(goodsId);</span><br><span class="line">goods.setSellerId(openId);</span><br><span class="line">goods.setSellerPhone(goodsPhone);</span><br><span class="line">goods.setAddress(goodsAddress);</span><br><span class="line">goods.setGoodsDesc(goodsDesc);</span><br><span class="line">goods.setLikeCounts(<span class="number">0</span>);</span><br><span class="line">goods.setGoodsName(goodsName);</span><br><span class="line">goods.setPrice(goodsPrice);</span><br><span class="line">goods.setGoodsNum(goodsNum);</span><br><span class="line"></span><br><span class="line">goodsService.saveGoods(goods);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> IMoocJSONResult.ok(goodsId);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="上传图片接口"><a href="#上传图片接口" class="headerlink" title="上传图片接口"></a>上传图片接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(value=<span class="string">"/uploadGoodsImg"</span> ,headers=<span class="string">"content-type=multipart/form-data"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> IMoocJSONResult <span class="title">uploadGoodsImg</span><span class="params">(String goodsId,@RequestParam(<span class="string">"file"</span>)</span> MultipartFile[] files) <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//文件保存的命名空间</span></span><br><span class="line">String fileSpace=<span class="string">"D:/cunjin-xianyu-test"</span>;</span><br><span class="line"><span class="comment">//保存到数据库的相对路径</span></span><br><span class="line">String uploadPathDB=<span class="string">"/"</span>+goodsId+<span class="string">"/img"</span>;</span><br><span class="line">FileOutputStream fileOutputStream=<span class="keyword">null</span>;</span><br><span class="line">InputStream inputStream= <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(files != <span class="keyword">null</span> &amp;&amp; files.length&gt;<span class="number">0</span>) &#123;</span><br><span class="line">String fileName= files[<span class="number">0</span>].getOriginalFilename();</span><br><span class="line"><span class="keyword">if</span> (StringUtils.isNotBlank(fileName)) &#123;</span><br><span class="line"><span class="comment">//文件保存的最终路径</span></span><br><span class="line">String finalPath = fileSpace + uploadPathDB + <span class="string">"/"</span> + fileName;</span><br><span class="line">    <span class="comment">//设置数据库保存的路径</span></span><br><span class="line">uploadPathDB+=(<span class="string">"/"</span>+fileName);</span><br><span class="line"></span><br><span class="line">File outFile=<span class="keyword">new</span> File(finalPath);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (outFile.getParentFile()!=<span class="keyword">null</span> || !outFile.getParentFile().isDirectory()) &#123;</span><br><span class="line"><span class="comment">//创建父文件夹</span></span><br><span class="line">outFile.getParentFile().mkdirs();</span><br><span class="line">&#125;</span><br><span class="line">fileOutputStream = <span class="keyword">new</span> FileOutputStream(outFile);</span><br><span class="line">inputStream = files[<span class="number">0</span>].getInputStream();</span><br><span class="line">IOUtils.copy(inputStream, fileOutputStream);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> IMoocJSONResult.errorMsg(<span class="string">"上传出错"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line"><span class="keyword">return</span> IMoocJSONResult.errorMsg(<span class="string">"上传出错"</span>);</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(fileOutputStream!=<span class="keyword">null</span>) &#123;</span><br><span class="line">fileOutputStream.flush();</span><br><span class="line">fileOutputStream.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GoodsImg goodsImg = <span class="keyword">new</span> GoodsImg();</span><br><span class="line">goodsImg.setGoodsId(goodsId);</span><br><span class="line">goodsImg.setImg(uploadPathDB);</span><br><span class="line">goodsService.saveGoodsImg(goodsImg);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> IMoocJSONResult.ok(<span class="string">"上传成功"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="好了，代码写完了，现在来进行前后端联调，测试一下。我们先选几张图，输一些数据"><a href="#好了，代码写完了，现在来进行前后端联调，测试一下。我们先选几张图，输一些数据" class="headerlink" title="好了，代码写完了，现在来进行前后端联调，测试一下。我们先选几张图，输一些数据"></a>好了，代码写完了，现在来进行前后端联调，测试一下。我们先选几张图，输一些数据</h4><p><img src="/images/publish/6.png" alt="图片.png"></p><h4 id="在本地新建一个文件夹，用于存放图片，路径与代码的命名空间一致。"><a href="#在本地新建一个文件夹，用于存放图片，路径与代码的命名空间一致。" class="headerlink" title="在本地新建一个文件夹，用于存放图片，路径与代码的命名空间一致。"></a>在本地新建一个文件夹，用于存放图片，路径与代码的命名空间一致。</h4><p><img src="/images/publish/7.png" alt="图片.png"></p><h4 id="好了，现在我们点击发布，观察数据库和本地文件。"><a href="#好了，现在我们点击发布，观察数据库和本地文件。" class="headerlink" title="好了，现在我们点击发布，观察数据库和本地文件。"></a>好了，现在我们点击发布，观察数据库和本地文件。</h4><p><img src="/images/publish/8.png" alt="图片.png"></p><p><img src="/images/publish/9.png" alt="图片.png"></p><p><img src="/images/publish/10.png" alt="图片.png"></p><h4 id="可以看到，我们发布的商品信息和图片相对路径都已经存入数据库了，同时，本地也已经保存了这两张图片。测试成功！"><a href="#可以看到，我们发布的商品信息和图片相对路径都已经存入数据库了，同时，本地也已经保存了这两张图片。测试成功！" class="headerlink" title="可以看到，我们发布的商品信息和图片相对路径都已经存入数据库了，同时，本地也已经保存了这两张图片。测试成功！"></a>可以看到，我们发布的商品信息和图片相对路径都已经存入数据库了，同时，本地也已经保存了这两张图片。测试成功！</h4><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ol><li>数据库存放多张图片路径，除了用本文的方法，还可以使用一些特定符号将路径分隔开，存入商品信息表中，这样，即使上传多张图片也只会存入一行数据，不过这种方法也是在网上看过，自己还未实践过。</li><li>在使用wx.uploadFile接口时，要记得将content-type改为multipart/form-data。</li><li>使用IOUtils写文件的拷贝非常方便，无需各种输入流，然后读取line，输出到输出流。</li></ol>]]></content>
    
    
    <categories>
      
      <category>学习日记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>SpringBoot</tag>
      
      <tag>微信小程序</tag>
      
      <tag>myBatis</tag>
      
      <tag>服务通知</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序使用微信开放接口完成用户注册登录业务</title>
    <link href="undefined2018/09/15/miniLogin/"/>
    <url>2018/09/15/miniLogin/</url>
    
    <content type="html"><![CDATA[<hr><p>本文使用的技术栈：小程序开发、SpringBoot、MyBatis、Redis</p><blockquote><h3 id="众所周知，登录注册功能一直是一个软件必不可少的一个模块，传统的操作逻辑需要用户手动输入账户和密码才能完成。随着使用软件数量的增加，用户难免会出现记错密码的情况，给自己带来不必要的麻烦。因此，类似微信账号一键登录app这样简单，快捷的操作逐渐得到用户的认可。"><a href="#众所周知，登录注册功能一直是一个软件必不可少的一个模块，传统的操作逻辑需要用户手动输入账户和密码才能完成。随着使用软件数量的增加，用户难免会出现记错密码的情况，给自己带来不必要的麻烦。因此，类似微信账号一键登录app这样简单，快捷的操作逐渐得到用户的认可。" class="headerlink" title="众所周知，登录注册功能一直是一个软件必不可少的一个模块，传统的操作逻辑需要用户手动输入账户和密码才能完成。随着使用软件数量的增加，用户难免会出现记错密码的情况，给自己带来不必要的麻烦。因此，类似微信账号一键登录app这样简单，快捷的操作逐渐得到用户的认可。"></a>众所周知，登录注册功能一直是一个软件必不可少的一个模块，传统的操作逻辑需要用户手动输入账户和密码才能完成。随着使用软件数量的增加，用户难免会出现记错密码的情况，给自己带来不必要的麻烦。因此，类似微信账号一键登录app这样简单，快捷的操作逐渐得到用户的认可。</h3></blockquote><p><img src="/images/mp/1.jpg" alt="登录UI.jpg"></p><a id="more"></a><h3 id="在小程序开发中，微信官方很友好地开放了Wx-login这种接口来获取用户的身份标识别。本文将分析这一登录接口实现过程，最终完成小程序用户微信登录功能。"><a href="#在小程序开发中，微信官方很友好地开放了Wx-login这种接口来获取用户的身份标识别。本文将分析这一登录接口实现过程，最终完成小程序用户微信登录功能。" class="headerlink" title="在小程序开发中，微信官方很友好地开放了Wx.login这种接口来获取用户的身份标识别。本文将分析这一登录接口实现过程，最终完成小程序用户微信登录功能。"></a>在小程序开发中，微信官方很友好地开放了Wx.login这种接口来获取用户的身份标识别。本文将分析这一登录接口实现过程，最终完成小程序用户微信登录功能。</h3><h4 id="首先，我们看一下微信官方给出的登录流程时序图"><a href="#首先，我们看一下微信官方给出的登录流程时序图" class="headerlink" title="首先，我们看一下微信官方给出的登录流程时序图"></a>首先，我们看一下微信官方给出的登录流程时序图</h4><p><img src="/images/mp/2.jpg" alt="wxlogin登录时序图.jpg"></p><h4 id="现在，我们根据这张图用代码来实现它。"><a href="#现在，我们根据这张图用代码来实现它。" class="headerlink" title="现在，我们根据这张图用代码来实现它。"></a>现在，我们根据这张图用代码来实现它。</h4><h4 id="第一步，我们在原有的小程序登录页面中加入一个微信登录按钮，注意，这个按钮需要有bindgetuserinfo属性来获取用户的加密数据，同时，设置open-type-”getUserInfo”，属性才会生效。"><a href="#第一步，我们在原有的小程序登录页面中加入一个微信登录按钮，注意，这个按钮需要有bindgetuserinfo属性来获取用户的加密数据，同时，设置open-type-”getUserInfo”，属性才会生效。" class="headerlink" title="第一步，我们在原有的小程序登录页面中加入一个微信登录按钮，注意，这个按钮需要有bindgetuserinfo属性来获取用户的加密数据，同时，设置open-type=”getUserInfo”，属性才会生效。"></a>第一步，我们在原有的小程序登录页面中加入一个微信登录按钮，注意，这个按钮需要有bindgetuserinfo属性来获取用户的加密数据，同时，设置open-type=”getUserInfo”，属性才会生效。</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"goRegistBtn"</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">open-type</span>=<span class="string">'getUserInfo'</span> <span class="attr">bindgetuserinfo</span>=<span class="string">'doLogin'</span>&gt;</span>微信登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/mp/3.png" alt="图片.png"></p><h4 id="第二步，在小程序端调用Wx-login获取临时登录凭证code，传至我们的后台服务器，具体代码如下："><a href="#第二步，在小程序端调用Wx-login获取临时登录凭证code，传至我们的后台服务器，具体代码如下：" class="headerlink" title="第二步，在小程序端调用Wx.login获取临时登录凭证code，传至我们的后台服务器，具体代码如下："></a>第二步，在小程序端调用Wx.login获取临时登录凭证code，传至我们的后台服务器，具体代码如下：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">doLogin: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 登录  </span></span><br><span class="line">  wx.login(&#123;</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">      <span class="comment">// 获取登录的临时凭证</span></span><br><span class="line">      <span class="keyword">var</span> code = res.code;</span><br><span class="line">      <span class="comment">// 调用后端，获取微信的session_key, secret</span></span><br><span class="line">      wx.request(&#123;</span><br><span class="line">      <span class="comment">//使用本地服务器做测试</span></span><br><span class="line">        url: <span class="string">"http://192.168.1.102:8080/wxLogin"</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">          code: code</span><br><span class="line">        &#125;,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(result);</span><br><span class="line">          <span class="comment">// 保存用户信息到本地缓存</span></span><br><span class="line">          app.setGlobalUserInfo(e.detail.userInfo);</span><br><span class="line">          wx.redirectTo(&#123;</span><br><span class="line">            url: <span class="string">'../index/index'</span>,</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第三步，我们在后台接收到小程序前端传来的code后，结合开发者的appid和appsecret，向微信接口服务交换用户的包含openId和Session-key的JSON字符串，然后我们需要在生成一个随机数作为登录态，最后，以登录态作为键，JSON字符串作为值保存至Redis缓存中。具体代码如下："><a href="#第三步，我们在后台接收到小程序前端传来的code后，结合开发者的appid和appsecret，向微信接口服务交换用户的包含openId和Session-key的JSON字符串，然后我们需要在生成一个随机数作为登录态，最后，以登录态作为键，JSON字符串作为值保存至Redis缓存中。具体代码如下：" class="headerlink" title="第三步，我们在后台接收到小程序前端传来的code后，结合开发者的appid和appsecret，向微信接口服务交换用户的包含openId和Session_key的JSON字符串，然后我们需要在生成一个随机数作为登录态，最后，以登录态作为键，JSON字符串作为值保存至Redis缓存中。具体代码如下："></a>第三步，我们在后台接收到小程序前端传来的code后，结合开发者的appid和appsecret，向微信接口服务交换用户的包含openId和Session_key的JSON字符串，然后我们需要在生成一个随机数作为登录态，最后，以登录态作为键，JSON字符串作为值保存至Redis缓存中。具体代码如下：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/wxLogin"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> IMoocJSONResult <span class="title">wxLogin</span><span class="params">(String code)</span> </span>&#123;</span><br><span class="line"><span class="comment">//微信接口地址</span></span><br><span class="line">String url = <span class="string">"https://api.weixin.qq.com/sns/jscode2session"</span>;</span><br><span class="line"><span class="comment">//将code,appid,appsecret存入map</span></span><br><span class="line">Map&lt;String, String&gt; param = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="comment">//开发者自己的appid和secret，这里用xxxxx填充</span></span><br><span class="line">param.put(<span class="string">"appid"</span>, <span class="string">"xxxxx"</span>);</span><br><span class="line">param.put(<span class="string">"secret"</span>, <span class="string">"xxxxx"</span>);</span><br><span class="line">param.put(<span class="string">"js_code"</span>, code);</span><br><span class="line">param.put(<span class="string">"grant_type"</span>, <span class="string">"authorization_code"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用http客户端工具完成交换请求，获得包含openId和session_key的字符串数组</span></span><br><span class="line">String wxResult = HttpClientUtil.doGet(url, param);</span><br><span class="line"></span><br><span class="line"><span class="comment">//随机生成一段随机数</span></span><br><span class="line">        <span class="keyword">int</span> hashCodeV = UUID.randomUUID().toString().hashCode();</span><br><span class="line">        <span class="keyword">if</span> (hashCodeV &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            hashCodeV = -hashCodeV;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//生成自定义登录态</span></span><br><span class="line">        String thirdSession = <span class="keyword">new</span> Random(<span class="number">10</span>).nextInt(<span class="number">8</span>) + <span class="number">1</span> + String.format(<span class="string">"%015d"</span>, hashCodeV);</span><br><span class="line"><span class="comment">// 存入redis,加入user-redis-session:作为前缀，方便管理。</span></span><br><span class="line">redis.set(<span class="string">"Wxuser-redis-session:"</span> + thirdSession,wxResult,<span class="number">1000</span> * <span class="number">60</span> * <span class="number">30</span>);</span><br><span class="line"><span class="comment">//向小程序返回登录态</span></span><br><span class="line"><span class="keyword">return</span> IMoocJSONResult.ok(thirdSession);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第四步，我们要将微信用户的数据保存到数据库中，完成用户注册业务。"><a href="#第四步，我们要将微信用户的数据保存到数据库中，完成用户注册业务。" class="headerlink" title="第四步，我们要将微信用户的数据保存到数据库中，完成用户注册业务。"></a>第四步，我们要将微信用户的数据保存到数据库中，完成用户注册业务。</h4><h5 id="在最开始，我们点击微信登录按钮后，我们获取到了一些用户的加密数据，这些数据需要传到后台服务器进行校验签名和解密，来保证数据不被篡改。数据如下图所示："><a href="#在最开始，我们点击微信登录按钮后，我们获取到了一些用户的加密数据，这些数据需要传到后台服务器进行校验签名和解密，来保证数据不被篡改。数据如下图所示：" class="headerlink" title="在最开始，我们点击微信登录按钮后，我们获取到了一些用户的加密数据，这些数据需要传到后台服务器进行校验签名和解密，来保证数据不被篡改。数据如下图所示："></a>在最开始，我们点击微信登录按钮后，我们获取到了一些用户的加密数据，这些数据需要传到后台服务器进行校验签名和解密，来保证数据不被篡改。数据如下图所示：</h5><p><img src="/images/mp/4.png" alt="图片.png"></p><h4 id="这里需要解释一下几个关键参数的属性"><a href="#这里需要解释一下几个关键参数的属性" class="headerlink" title="这里需要解释一下几个关键参数的属性"></a>这里需要解释一下几个关键参数的属性</h4><blockquote><h4 id="1-encryptedData：加密的用户敏感数据"><a href="#1-encryptedData：加密的用户敏感数据" class="headerlink" title="1.encryptedData：加密的用户敏感数据"></a>1.encryptedData：加密的用户敏感数据</h4><h4 id="2-signature-签名，signature-sha1-rawData-session-key"><a href="#2-signature-签名，signature-sha1-rawData-session-key" class="headerlink" title="2.signature:签名，signature=sha1(rawData+session_key )"></a>2.signature:签名，signature=sha1(rawData+session_key )</h4><h5 id="3-iv：对称解密算法初始向量"><a href="#3-iv：对称解密算法初始向量" class="headerlink" title="3.iv：对称解密算法初始向量"></a>3.iv：对称解密算法初始向量</h5></blockquote><h4 id="再来看看微信官方的开放数据校验与解密的流程图"><a href="#再来看看微信官方的开放数据校验与解密的流程图" class="headerlink" title="再来看看微信官方的开放数据校验与解密的流程图"></a>再来看看微信官方的开放数据校验与解密的流程图</h4><p><img src="/images/mp/5.jpg" alt="signature.jpg"></p><h4 id="现在我们可以开发注册功能了，由于只是要把功能调试成功，我就直接在已有的项目上开发了，一些工具类的实现原理这里就不做分析了。"><a href="#现在我们可以开发注册功能了，由于只是要把功能调试成功，我就直接在已有的项目上开发了，一些工具类的实现原理这里就不做分析了。" class="headerlink" title="现在我们可以开发注册功能了，由于只是要把功能调试成功，我就直接在已有的项目上开发了，一些工具类的实现原理这里就不做分析了。"></a>现在我们可以开发注册功能了，由于只是要把功能调试成功，我就直接在已有的项目上开发了，一些工具类的实现原理这里就不做分析了。</h4><h4 id="小程序前端请求代码："><a href="#小程序前端请求代码：" class="headerlink" title="小程序前端请求代码："></a>小程序前端请求代码：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取开放数据</span></span><br><span class="line"><span class="keyword">var</span> encryptedData = e.detail.encryptedData</span><br><span class="line"><span class="keyword">var</span> signature = e.detail.signature</span><br><span class="line"><span class="keyword">var</span> iv = e.detail.iv</span><br><span class="line"><span class="keyword">var</span> rawData = e.detail.rawData</span><br><span class="line"><span class="comment">//从本地缓存中取出thirdsession</span></span><br><span class="line"><span class="keyword">var</span> thirdsession = wx.getStorageSync(<span class="string">'thirdsession'</span>)</span><br><span class="line">wx.request(&#123;</span><br><span class="line">  url: <span class="string">'http://192.168.1.102:8080/wxRegister'</span>, <span class="comment">//后端请求地址</span></span><br><span class="line">  method: <span class="string">"GET"</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    thirdSession: thirdsession,</span><br><span class="line">    encryptedData: encryptedData,</span><br><span class="line">    rawData: rawData,</span><br><span class="line">    signature: signature,</span><br><span class="line">    iv: iv</span><br><span class="line">  &#125;,</span><br><span class="line">  header: &#123;</span><br><span class="line">    <span class="string">'content-type'</span>: <span class="string">'application/json'</span> <span class="comment">// 默认值</span></span><br><span class="line">  &#125;,</span><br><span class="line">  success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//成功后跳转至用户信息页面</span></span><br><span class="line">    wx.redirectTo(&#123;</span><br><span class="line">      url: <span class="string">'../mine/mine'</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="后端接口请求代码："><a href="#后端接口请求代码：" class="headerlink" title="后端接口请求代码："></a>后端接口请求代码：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/wxRegister"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> IMoocJSONResult <span class="title">wxRegister</span><span class="params">(String thirdSession, String signature, String rawData, String encryptedData, String iv)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.根据小程序前端传来的thirdSession，在redis中找出对应的openId和session_key</span></span><br><span class="line">        String value = (String) redis.get(<span class="string">"Wxuser-redis-session:"</span>+thirdSession);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(value)) &#123;</span><br><span class="line">            <span class="keyword">return</span> IMoocJSONResult.errorMsg(<span class="string">"请求超时"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//解析json格式的str</span></span><br><span class="line">        JSONObject json = JSONObject.parseObject(value);</span><br><span class="line">        <span class="comment">//取出session_key</span></span><br><span class="line">        String sessionKey = json.getString(<span class="string">"session_key"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数据签名校验</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>.wxService.getUserService().checkUserInfo(sessionKey, rawData, signature)) &#123;</span><br><span class="line">            <span class="keyword">return</span> IMoocJSONResult.errorMsg(<span class="string">"数据签名校验失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 解密用户信息</span></span><br><span class="line">        WxMaUserInfo userInfo = <span class="keyword">this</span>.wxService.getUserService().getUserInfo(sessionKey, encryptedData, iv);</span><br><span class="line">WxUser wxuser = wxUserService.queryUserInfo(userInfo.getOpenId());</span><br><span class="line"><span class="keyword">if</span> (wxuser == <span class="keyword">null</span>) &#123;</span><br><span class="line">WxUser wxUserInfo = <span class="keyword">new</span> WxUser();</span><br><span class="line">wxUserInfo.setOpenid(userInfo.getOpenId());</span><br><span class="line">wxUserInfo.setNickname(userInfo.getNickName());</span><br><span class="line">wxUserInfo.setCity(userInfo.getCity());</span><br><span class="line">wxUserInfo.setRegistertime(<span class="keyword">new</span> Date());</span><br><span class="line">wxUserService.saveUser(wxUserInfo);</span><br><span class="line">    <span class="keyword">return</span> IMoocJSONResult.ok(<span class="string">"用户注册成功!"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> IMoocJSONResult.ok(<span class="string">"用户信息验证成功"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="再写一个用户信息页面，用于登录成功后显示用户信息-检验登录态是否有效。"><a href="#再写一个用户信息页面，用于登录成功后显示用户信息-检验登录态是否有效。" class="headerlink" title="再写一个用户信息页面，用于登录成功后显示用户信息,检验登录态是否有效。"></a>再写一个用户信息页面，用于登录成功后显示用户信息,检验登录态是否有效。</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//mine.js</span></span><br><span class="line">onLoad:<span class="function"><span class="keyword">function</span>(<span class="params">params</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> me = <span class="keyword">this</span>;</span><br><span class="line">wx.hideToast();</span><br><span class="line"><span class="comment">//检验登录态是否有效。</span></span><br><span class="line">wx.checkSession(&#123;</span><br><span class="line">  success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res);</span><br><span class="line">  &#125;,</span><br><span class="line">  fail: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">    wx.showToast(&#123;</span><br><span class="line">      title: <span class="string">'登陆态已失效，请重新登陆'</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">//失效返回重新登录</span></span><br><span class="line">    wx.redirectTo(&#123;</span><br><span class="line">      url: <span class="string">'../WxLogin/login'</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//获取全局用户信息</span></span><br><span class="line"><span class="keyword">var</span> userInfo = app.getGlobalUserInfo();</span><br><span class="line">me.setData(&#123;</span><br><span class="line">    userInfo: userInfo,</span><br><span class="line">    nickname: userInfo.nickName</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="至此，前后端均开发完毕，我在原有项目的数据库中新建了一张表用于测试，表结构如下："><a href="#至此，前后端均开发完毕，我在原有项目的数据库中新建了一张表用于测试，表结构如下：" class="headerlink" title="至此，前后端均开发完毕，我在原有项目的数据库中新建了一张表用于测试，表结构如下："></a>至此，前后端均开发完毕，我在原有项目的数据库中新建了一张表用于测试，表结构如下：</h4><p><img src="/images/mp/6.jpg" alt="图片.png"></p><h4 id="最后，运行后端工程和Redis，与小程序前端进行联调，测试功能是否能成功运行。"><a href="#最后，运行后端工程和Redis，与小程序前端进行联调，测试功能是否能成功运行。" class="headerlink" title="最后，运行后端工程和Redis，与小程序前端进行联调，测试功能是否能成功运行。"></a>最后，运行后端工程和Redis，与小程序前端进行联调，测试功能是否能成功运行。</h4><blockquote><h4 id="1-在小程序端点击微信登录，后端能成功使用Code交换openId和Session-key，与随机生成的登录态一起存入redis，测试结果如下："><a href="#1-在小程序端点击微信登录，后端能成功使用Code交换openId和Session-key，与随机生成的登录态一起存入redis，测试结果如下：" class="headerlink" title="1.在小程序端点击微信登录，后端能成功使用Code交换openId和Session_key，与随机生成的登录态一起存入redis，测试结果如下："></a>1.在小程序端点击微信登录，后端能成功使用Code交换openId和Session_key，与随机生成的登录态一起存入redis，测试结果如下：</h4></blockquote><h4 id="小程序端向用户发起授权请求"><a href="#小程序端向用户发起授权请求" class="headerlink" title="小程序端向用户发起授权请求"></a>小程序端向用户发起授权请求</h4><p><img src="/images/mp/7.png" alt="图片.png"></p><h4 id="后端用接受到的code交换openId和session-key"><a href="#后端用接受到的code交换openId和session-key" class="headerlink" title="后端用接受到的code交换openId和session_key"></a>后端用接受到的code交换openId和session_key</h4><p><img src="/images/mp/8.png" alt="图片.png"></p><h4 id="生成随机数登录态，组成键-值存入Redis"><a href="#生成随机数登录态，组成键-值存入Redis" class="headerlink" title="生成随机数登录态，组成键-值存入Redis"></a>生成随机数登录态，组成键-值存入Redis</h4><p><img src="/images/mp/9.png" alt="图片.png"></p><blockquote><h4 id="2-从前端获取小程序本地缓存中的thirdsession以及用户的加密信息，进行身份校验和信息解密，解密后的数据存入数据库。"><a href="#2-从前端获取小程序本地缓存中的thirdsession以及用户的加密信息，进行身份校验和信息解密，解密后的数据存入数据库。" class="headerlink" title="2.从前端获取小程序本地缓存中的thirdsession以及用户的加密信息，进行身份校验和信息解密，解密后的数据存入数据库。"></a>2.从前端获取小程序本地缓存中的thirdsession以及用户的加密信息，进行身份校验和信息解密，解密后的数据存入数据库。</h4></blockquote><h4 id="根据thirdsession，从Redis中取出session-key"><a href="#根据thirdsession，从Redis中取出session-key" class="headerlink" title="根据thirdsession，从Redis中取出session_key"></a>根据thirdsession，从Redis中取出session_key</h4><p><img src="/images/mp/10.png" alt="图片.png"></p><h5 id="将用户信息进行解密，存入数据表"><a href="#将用户信息进行解密，存入数据表" class="headerlink" title="将用户信息进行解密，存入数据表"></a>将用户信息进行解密，存入数据表</h5><p><img src="/images/mp/11.png" alt="图片.png"></p><blockquote><h5 id="3-跳转至用户信息页面，检验登录态是否有效，获取全局用户信息填充至页面。"><a href="#3-跳转至用户信息页面，检验登录态是否有效，获取全局用户信息填充至页面。" class="headerlink" title="3.跳转至用户信息页面，检验登录态是否有效，获取全局用户信息填充至页面。"></a>3.跳转至用户信息页面，检验登录态是否有效，获取全局用户信息填充至页面。</h5></blockquote><h5 id="登录态有效"><a href="#登录态有效" class="headerlink" title="登录态有效"></a>登录态有效</h5><p><img src="/images/mp/12.png" alt="图片.png"></p><h4 id="用户信息填充成功"><a href="#用户信息填充成功" class="headerlink" title="用户信息填充成功"></a>用户信息填充成功</h4><p><img src="/images/mp/13.png" alt="图片.png"></p><h4 id="现在，整个模块均开发测试完成。一个看似简单的模块换了另一种解决方法，这个过程我踩了许多坑，犯了许多低级的错误，因此决定写下这篇文章来总结一下自己的开发经验，让思路更清晰。若各位大神发现代码中有bug的话，可以关注我在后台留言告诉我哦。"><a href="#现在，整个模块均开发测试完成。一个看似简单的模块换了另一种解决方法，这个过程我踩了许多坑，犯了许多低级的错误，因此决定写下这篇文章来总结一下自己的开发经验，让思路更清晰。若各位大神发现代码中有bug的话，可以关注我在后台留言告诉我哦。" class="headerlink" title="现在，整个模块均开发测试完成。一个看似简单的模块换了另一种解决方法，这个过程我踩了许多坑，犯了许多低级的错误，因此决定写下这篇文章来总结一下自己的开发经验，让思路更清晰。若各位大神发现代码中有bug的话，可以关注我在后台留言告诉我哦。"></a>现在，整个模块均开发测试完成。一个看似简单的模块换了另一种解决方法，这个过程我踩了许多坑，犯了许多低级的错误，因此决定写下这篇文章来总结一下自己的开发经验，让思路更清晰。若各位大神发现代码中有bug的话，可以关注我在后台留言告诉我哦。</h4><h4 id="最后，RNG牛逼！"><a href="#最后，RNG牛逼！" class="headerlink" title="最后，RNG牛逼！"></a>最后，RNG牛逼！</h4><p><img src="/images/mp/14.gif" alt="rng.gif"></p>]]></content>
    
    
    <categories>
      
      <category>学习日记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>SpringBoot</tag>
      
      <tag>微信小程序</tag>
      
      <tag>myBatis</tag>
      
      <tag>微信登录接口</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>